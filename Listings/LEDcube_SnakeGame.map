Component: ARM Compiler 5.06 update 5 (build 528) Tool: armlink [4d35e2]

==============================================================================

Section Cross References

    main.o(i.main) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    main.o(i.main) refers to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    main.o(i.main) refers to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    main.o(i.main) refers to _printf_dec.o(.text) for _printf_int_dec
    main.o(i.main) refers to _printf_str.o(.text) for _printf_str
    main.o(i.main) refers to led.o(i.ports_init) for ports_init
    main.o(i.main) refers to btn.o(i.BTN_Init) for BTN_Init
    main.o(i.main) refers to lcd.o(i.LCD_Init) for LCD_Init
    main.o(i.main) refers to lcd.o(i.LCD_PutString) for LCD_PutString
    main.o(i.main) refers to noretval__2snprintf.o(.text) for __2snprintf
    main.o(i.main) refers to rtos.o(i.RTOS_Init) for RTOS_Init
    main.o(i.main) refers to main.o(.data) for start_message
    main.o(.data) refers to main.o(.conststring) for .conststring
    btn.o(i.Thread_DownButtonCheck) refers to rtx_delay.o(.text.osDelay) for osDelay
    btn.o(i.Thread_DownButtonCheck) refers to snake.o(i.set_direction) for set_direction
    btn.o(i.Thread_DownButtonCheck) refers to snake.o(.data) for is_playing
    btn.o(i.Thread_DownButtonCheck) refers to snake.o(.bss) for snake
    btn.o(i.Thread_LeftButtonCheck) refers to rtx_delay.o(.text.osDelay) for osDelay
    btn.o(i.Thread_LeftButtonCheck) refers to snake.o(i.set_direction) for set_direction
    btn.o(i.Thread_LeftButtonCheck) refers to snake.o(.data) for is_playing
    btn.o(i.Thread_LeftButtonCheck) refers to snake.o(.bss) for snake
    btn.o(i.Thread_RightButtonCheck) refers to rtx_delay.o(.text.osDelay) for osDelay
    btn.o(i.Thread_RightButtonCheck) refers to snake.o(i.set_direction) for set_direction
    btn.o(i.Thread_RightButtonCheck) refers to snake.o(.data) for is_playing
    btn.o(i.Thread_RightButtonCheck) refers to snake.o(.bss) for snake
    btn.o(i.Thread_SelectButtonCheck) refers to rtx_delay.o(.text.osDelay) for osDelay
    btn.o(i.Thread_SelectButtonCheck) refers to lcd.o(i.LCD_ClearString) for LCD_ClearString
    btn.o(i.Thread_SelectButtonCheck) refers to snake.o(i.play_snake) for play_snake
    btn.o(i.Thread_SelectButtonCheck) refers to snake.o(.data) for is_playing
    btn.o(i.Thread_SelectButtonCheck) refers to main.o(.data) for last_score
    btn.o(i.Thread_UpButtonCheck) refers to rtx_delay.o(.text.osDelay) for osDelay
    btn.o(i.Thread_UpButtonCheck) refers to snake.o(i.set_direction) for set_direction
    btn.o(i.Thread_UpButtonCheck) refers to snake.o(.data) for is_playing
    btn.o(i.Thread_UpButtonCheck) refers to snake.o(.bss) for snake
    lcd.o(i.LCD_ClearPage) refers to lcd.o(i.LCD_SetPage) for LCD_SetPage
    lcd.o(i.LCD_ClearPage) refers to lcd.o(i.LCD_SetAddress) for LCD_SetAddress
    lcd.o(i.LCD_ClearPage) refers to lcd.o(i.LCD_ReadStatus) for LCD_ReadStatus
    lcd.o(i.LCD_ClearPage) refers to lcd.o(i.LCD_WriteData) for LCD_WriteData
    lcd.o(i.LCD_ClearScreen) refers to lcd.o(i.LCD_ClearPage) for LCD_ClearPage
    lcd.o(i.LCD_ClearString) refers to lcd.o(i.LCD_ClearPage) for LCD_ClearPage
    lcd.o(i.LCD_Disable) refers to lcd.o(i.LCD_DataBusDirection) for LCD_DataBusDirection
    lcd.o(i.LCD_Disable) refers to lcd.o(i.LCD_SetDataBits) for LCD_SetDataBits
    lcd.o(i.LCD_Disable) refers to lcd.o(i.LCD_Reset) for LCD_Reset
    lcd.o(i.LCD_Disable) refers to system_mdr32f9qx.o(.data) for SystemCoreClock
    lcd.o(i.LCD_Enable) refers to lcd.o(i.LCD_DataBusDirection) for LCD_DataBusDirection
    lcd.o(i.LCD_Enable) refers to lcd.o(i.LCD_SetDataBits) for LCD_SetDataBits
    lcd.o(i.LCD_Enable) refers to lcd.o(i.LCD_Reset) for LCD_Reset
    lcd.o(i.LCD_Enable) refers to system_mdr32f9qx.o(.data) for SystemCoreClock
    lcd.o(i.LCD_Init) refers to lcd.o(i.LCD_PortCfg) for LCD_PortCfg
    lcd.o(i.LCD_Init) refers to lcd.o(i.LCD_ReadStatus) for LCD_ReadStatus
    lcd.o(i.LCD_Init) refers to lcd.o(i.LCD_Enable) for LCD_Enable
    lcd.o(i.LCD_Init) refers to lcd.o(i.LCD_ClearScreen) for LCD_ClearScreen
    lcd.o(i.LCD_Init) refers to lcd.o(i.LCD_PutImage) for LCD_PutImage
    lcd.o(i.LCD_Init) refers to system_mdr32f9qx.o(.data) for SystemCoreClock
    lcd.o(i.LCD_Init) refers to lcd.o(.constdata) for header
    lcd.o(i.LCD_PutImage) refers to lcd.o(i.LCD_SetPage) for LCD_SetPage
    lcd.o(i.LCD_PutImage) refers to lcd.o(i.LCD_SetAddress) for LCD_SetAddress
    lcd.o(i.LCD_PutImage) refers to lcd.o(i.LCD_ReadStatus) for LCD_ReadStatus
    lcd.o(i.LCD_PutImage) refers to lcd.o(i.LCD_WriteData) for LCD_WriteData
    lcd.o(i.LCD_PutString) refers to lcd.o(i.LCD_PutSymbol) for LCD_PutSymbol
    lcd.o(i.LCD_PutSymbol) refers to lcd.o(i.LCD_SetPage) for LCD_SetPage
    lcd.o(i.LCD_PutSymbol) refers to lcd.o(i.LCD_SetAddress) for LCD_SetAddress
    lcd.o(i.LCD_PutSymbol) refers to lcd.o(i.LCD_ReadStatus) for LCD_ReadStatus
    lcd.o(i.LCD_PutSymbol) refers to lcd.o(i.LCD_WriteData) for LCD_WriteData
    lcd.o(i.LCD_PutSymbol) refers to lcd.o(.constdata) for font
    lcd.o(i.LCD_ReadData) refers to lcd.o(i.LCD_DataBusDirection) for LCD_DataBusDirection
    lcd.o(i.LCD_ReadData) refers to lcd.o(i.LCD_SetDataBits) for LCD_SetDataBits
    lcd.o(i.LCD_ReadData) refers to lcd.o(i.LCD_Reset) for LCD_Reset
    lcd.o(i.LCD_ReadData) refers to system_mdr32f9qx.o(.data) for SystemCoreClock
    lcd.o(i.LCD_ReadStatus) refers to lcd.o(i.LCD_DataBusDirection) for LCD_DataBusDirection
    lcd.o(i.LCD_ReadStatus) refers to lcd.o(i.LCD_Reset) for LCD_Reset
    lcd.o(i.LCD_ReadStatus) refers to system_mdr32f9qx.o(.data) for SystemCoreClock
    lcd.o(i.LCD_Reset) refers to lcd.o(i.LCD_DataBusDirection) for LCD_DataBusDirection
    lcd.o(i.LCD_Reset) refers to system_mdr32f9qx.o(.data) for SystemCoreClock
    lcd.o(i.LCD_ScrollString) refers to strlen.o(.text) for strlen
    lcd.o(i.LCD_ScrollString) refers to lcd.o(i.LCD_PutString) for LCD_PutString
    lcd.o(i.LCD_SetAddress) refers to lcd.o(i.LCD_DataBusDirection) for LCD_DataBusDirection
    lcd.o(i.LCD_SetAddress) refers to lcd.o(i.LCD_SetDataBits) for LCD_SetDataBits
    lcd.o(i.LCD_SetAddress) refers to lcd.o(i.LCD_Reset) for LCD_Reset
    lcd.o(i.LCD_SetAddress) refers to system_mdr32f9qx.o(.data) for SystemCoreClock
    lcd.o(i.LCD_SetPage) refers to lcd.o(i.LCD_DataBusDirection) for LCD_DataBusDirection
    lcd.o(i.LCD_SetPage) refers to lcd.o(i.LCD_SetDataBits) for LCD_SetDataBits
    lcd.o(i.LCD_SetPage) refers to lcd.o(i.LCD_Reset) for LCD_Reset
    lcd.o(i.LCD_SetPage) refers to system_mdr32f9qx.o(.data) for SystemCoreClock
    lcd.o(i.LCD_WriteData) refers to lcd.o(i.LCD_DataBusDirection) for LCD_DataBusDirection
    lcd.o(i.LCD_WriteData) refers to lcd.o(i.LCD_SetDataBits) for LCD_SetDataBits
    lcd.o(i.LCD_WriteData) refers to lcd.o(i.LCD_Reset) for LCD_Reset
    lcd.o(i.LCD_WriteData) refers to system_mdr32f9qx.o(.data) for SystemCoreClock
    led.o(i.all_off) refers to led.o(i.set_registers) for set_registers
    led.o(i.all_off) refers to led.o(.data) for register_1
    led.o(i.set_registers) refers to led.o(i.shiftOut) for shiftOut
    led.o(i.set_registers) refers to led.o(.data) for register_7
    led.o(i.switch_off) refers to led.o(i.select_led) for select_led
    led.o(i.switch_off) refers to led.o(i.set_registers) for set_registers
    led.o(i.switch_off) refers to led.o(.data) for register_1
    led.o(i.switch_on) refers to led.o(i.select_led) for select_led
    led.o(i.switch_on) refers to led.o(i.set_registers) for set_registers
    led.o(i.switch_on) refers to led.o(.data) for register_1
    snake.o(i.draw_food) refers to led.o(i.switch_on) for switch_on
    snake.o(i.draw_snake) refers to led.o(i.switch_on) for switch_on
    snake.o(i.generate_food) refers to rand.o(.emb_text) for rand
    snake.o(i.move_snake) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    snake.o(i.move_snake) refers to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    snake.o(i.move_snake) refers to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    snake.o(i.move_snake) refers to _printf_dec.o(.text) for _printf_int_dec
    snake.o(i.move_snake) refers to _printf_str.o(.text) for _printf_str
    snake.o(i.move_snake) refers to snake.o(i.generate_food) for generate_food
    snake.o(i.move_snake) refers to lcd.o(i.LCD_ClearString) for LCD_ClearString
    snake.o(i.move_snake) refers to noretval__2snprintf.o(.text) for __2snprintf
    snake.o(i.move_snake) refers to lcd.o(i.LCD_PutString) for LCD_PutString
    snake.o(i.move_snake) refers to main.o(.data) for curr_score
    snake.o(i.play_snake) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    snake.o(i.play_snake) refers to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    snake.o(i.play_snake) refers to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    snake.o(i.play_snake) refers to _printf_dec.o(.text) for _printf_int_dec
    snake.o(i.play_snake) refers to _printf_str.o(.text) for _printf_str
    snake.o(i.play_snake) refers to led.o(i.all_off) for all_off
    snake.o(i.play_snake) refers to snake.o(i.init_snake) for init_snake
    snake.o(i.play_snake) refers to snake.o(i.generate_food) for generate_food
    snake.o(i.play_snake) refers to snake.o(i.move_snake) for move_snake
    snake.o(i.play_snake) refers to lcd.o(i.LCD_ClearString) for LCD_ClearString
    snake.o(i.play_snake) refers to lcd.o(i.LCD_PutString) for LCD_PutString
    snake.o(i.play_snake) refers to noretval__2snprintf.o(.text) for __2snprintf
    snake.o(i.play_snake) refers to snake.o(i.draw_snake) for draw_snake
    snake.o(i.play_snake) refers to snake.o(i.draw_food) for draw_food
    snake.o(i.play_snake) refers to snake.o(i.delay) for delay
    snake.o(i.play_snake) refers to main.o(.data) for curr_score
    snake.o(i.play_snake) refers to snake.o(.data) for is_playing
    rtos.o(i.RTOS_Init) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    rtos.o(i.RTOS_Init) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    rtos.o(i.RTOS_Init) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    rtos.o(i.RTOS_Init) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    rtos.o(i.RTOS_Init) refers to rtx_kernel.o(.text.osKernelStart) for osKernelStart
    rtos.o(i.RTOS_Init) refers to rtos.o(.constdata) for <Data1>
    rtos.o(i.RTOS_Init) refers to btn.o(i.Thread_DownButtonCheck) for Thread_DownButtonCheck
    rtos.o(i.RTOS_Init) refers to btn.o(i.Thread_UpButtonCheck) for Thread_UpButtonCheck
    rtos.o(i.RTOS_Init) refers to btn.o(i.Thread_SelectButtonCheck) for Thread_SelectButtonCheck
    rtos.o(i.RTOS_Init) refers to btn.o(i.Thread_LeftButtonCheck) for Thread_LeftButtonCheck
    rtos.o(i.RTOS_Init) refers to btn.o(i.Thread_RightButtonCheck) for Thread_RightButtonCheck
    rtx_lib.o(i.__user_perthread_libspace) refers to rtx_lib.o(i.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(i.__user_perthread_libspace) refers to rtx_thread.o(.text.osThreadGetId) for osThreadGetId
    rtx_lib.o(i.__user_perthread_libspace) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_lib.o(i.__user_perthread_libspace) refers to rtx_lib.o(.bss.os) for os_libspace
    rtx_lib.o(i._mutex_acquire) refers to rtx_lib.o(i.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(i._mutex_acquire) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    rtx_lib.o(i._mutex_free) refers to rtx_mutex.o(.text.osMutexDelete) for osMutexDelete
    rtx_lib.o(i._mutex_initialize) refers to rtx_mutex.o(.text.osMutexNew) for osMutexNew
    rtx_lib.o(i._mutex_initialize) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_lib.o(i._mutex_release) refers to rtx_lib.o(i.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(i._mutex_release) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    rtx_lib.o(i._platform_post_stackheap_init) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    rtx_lib.o(i.os_kernel_is_active) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    rtx_lib.o(i.os_kernel_is_active) refers to rtx_lib.o(.data) for os_kernel_active
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.thread.cb) for os_idle_thread_cb
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.thread.stack) for os_idle_thread_stack
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.msgqueue.cb) for os_timer_mq_cb
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.msgqueue.mem) for os_timer_mq_data
    rtx_lib.o(.data) refers to irq_cm3.o(.constdata) for irqRtxLib
    rtx_lib.o(.rodata) refers to rtx_lib.o(.bss.os) for os_isr_queue
    rtx_lib.o(.rodata) refers to rtx_lib.o(.constdata) for os_idle_thread_attr
    startup_mdr32f9qx.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_mdr32f9qx.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_mdr32f9qx.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_mdr32f9qx.o(RESET) refers to startup_mdr32f9qx.o(STACK) for __initial_sp
    startup_mdr32f9qx.o(RESET) refers to startup_mdr32f9qx.o(.text) for Reset_Handler
    startup_mdr32f9qx.o(RESET) refers to irq_cm3.o(.text) for SVC_Handler
    startup_mdr32f9qx.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_mdr32f9qx.o(.text) refers to system_mdr32f9qx.o(i.SystemInit) for SystemInit
    startup_mdr32f9qx.o(.text) refers to __main.o(!!!main) for __main
    startup_mdr32f9qx.o(.text) refers to startup_mdr32f9qx.o(HEAP) for Heap_Mem
    startup_mdr32f9qx.o(.text) refers to startup_mdr32f9qx.o(STACK) for Stack_Mem
    system_mdr32f9qx.o(i.SystemCoreClockUpdate) refers to system_mdr32f9qx.o(.data) for SystemCoreClock
    system_mdr32f9qx.o(i.SystemInit) refers to system_mdr32f9qx.o(i.SystemCoreClockUpdate) for SystemCoreClockUpdate
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rt_memclr_w.o(.text) for __aeabi_memclr8
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_memory.o(.text.osRtxMemoryInit) for osRtxMemoryInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.rodata.str1.4) for .L.str
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_config.o(i.osRtxIdleThread) for osRtxIdleThread
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_kernel.o(.text.svcRtxKernelStart) refers to system_mdr32f9qx.o(.data) for SystemCoreClock
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_system.o(.text.osRtxSysTimerSetup) for osRtxSysTimerSetup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_system.o(.text.osRtxSysTimerEnable) for osRtxSysTimerEnable
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_system.o(.text.osRtxSysTimerDisable) for osRtxSysTimerDisable
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_timer.o(.text.osRtxTimerTick) for osRtxTimerTick
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_system.o(.text.osRtxSysTimerEnable) for osRtxSysTimerEnable
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to rtx_system.o(.text.osRtxSysTimerGetCount) for osRtxSysTimerGetCount
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) refers to rtx_system.o(.text.osRtxSysTimerGetFreq) for osRtxSysTimerGetFreq
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for svcRtxKernelInitialize
    rtx_kernel.o(.ARM.exidx.text.osKernelInitialize) refers to rtx_kernel.o(.text.osKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.rodata.str1.4) for .L.str
    rtx_kernel.o(.text.osKernelGetInfo) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for svcRtxKernelGetInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo) refers to rtx_kernel.o(.text.osKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for svcRtxKernelGetState
    rtx_kernel.o(.ARM.exidx.text.osKernelGetState) refers to rtx_kernel.o(.text.osKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for svcRtxKernelStart
    rtx_kernel.o(.ARM.exidx.text.osKernelStart) refers to rtx_kernel.o(.text.osKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for svcRtxKernelLock
    rtx_kernel.o(.ARM.exidx.text.osKernelLock) refers to rtx_kernel.o(.text.osKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for svcRtxKernelUnlock
    rtx_kernel.o(.ARM.exidx.text.osKernelUnlock) refers to rtx_kernel.o(.text.osKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for svcRtxKernelRestoreLock
    rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.osKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for svcRtxKernelSuspend
    rtx_kernel.o(.ARM.exidx.text.osKernelSuspend) refers to rtx_kernel.o(.text.osKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for svcRtxKernelResume
    rtx_kernel.o(.ARM.exidx.text.osKernelResume) refers to rtx_kernel.o(.text.osKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for svcRtxKernelGetTickCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.osKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for svcRtxKernelGetTickFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.osKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_system.o(.text.osRtxSysTimerGetCount) for osRtxSysTimerGetCount
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for svcRtxKernelGetSysTimerCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.osKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_system.o(.text.osRtxSysTimerGetFreq) for osRtxSysTimerGetFreq
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for svcRtxKernelGetSysTimerFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.osKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.data.os) refers to rtx_kernel.o(.rodata.str1.4) for .L.str
    rtx_kernel.o(.data.irqRtxLibRef) refers to irq_cm3.o(.constdata) for irqRtxLib
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListRoot) refers to rtx_thread.o(.text.osRtxThreadListRoot) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListSort) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove) refers to rtx_thread.o(.text.osRtxThreadListRemove) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadBlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock) refers to rtx_thread.o(.text.osRtxThreadBlock) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadStackCheck) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadStackCheck) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStackCheck) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadDispatch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.svcRtxThreadNew) refers to aeabi_memset4.o(.text) for __aeabi_memset4
    rtx_thread.o(.text.svcRtxThreadNew) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osThreadExit) for osThreadExit
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for osRtxThreadPostProcess
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for svcRtxThreadExit
    rtx_thread.o(.ARM.exidx.text.osThreadExit) refers to rtx_thread.o(.text.osThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetStackSpace) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadEnumerate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.ARM.exidx.text.osThreadNew) refers to rtx_thread.o(.text.osThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for svcRtxThreadGetName
    rtx_thread.o(.ARM.exidx.text.osThreadGetName) refers to rtx_thread.o(.text.osThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for svcRtxThreadGetId
    rtx_thread.o(.ARM.exidx.text.osThreadGetId) refers to rtx_thread.o(.text.osThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for svcRtxThreadGetState
    rtx_thread.o(.ARM.exidx.text.osThreadGetState) refers to rtx_thread.o(.text.osThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for svcRtxThreadGetStackSize
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize) refers to rtx_thread.o(.text.osThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for svcRtxThreadGetStackSpace
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.osThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for svcRtxThreadSetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadSetPriority) refers to rtx_thread.o(.text.osThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for svcRtxThreadGetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadGetPriority) refers to rtx_thread.o(.text.osThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for svcRtxThreadYield
    rtx_thread.o(.ARM.exidx.text.osThreadYield) refers to rtx_thread.o(.text.osThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for svcRtxThreadSuspend
    rtx_thread.o(.ARM.exidx.text.osThreadSuspend) refers to rtx_thread.o(.text.osThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for svcRtxThreadResume
    rtx_thread.o(.ARM.exidx.text.osThreadResume) refers to rtx_thread.o(.text.osThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for svcRtxThreadDetach
    rtx_thread.o(.ARM.exidx.text.osThreadDetach) refers to rtx_thread.o(.text.osThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for svcRtxThreadJoin
    rtx_thread.o(.ARM.exidx.text.osThreadJoin) refers to rtx_thread.o(.text.osThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for svcRtxThreadTerminate
    rtx_thread.o(.ARM.exidx.text.osThreadTerminate) refers to rtx_thread.o(.text.osThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for svcRtxThreadGetCount
    rtx_thread.o(.ARM.exidx.text.osThreadGetCount) refers to rtx_thread.o(.text.osThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for svcRtxThreadEnumerate
    rtx_thread.o(.ARM.exidx.text.osThreadEnumerate) refers to rtx_thread.o(.text.osThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for svcRtxThreadFlagsSet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet) refers to rtx_thread.o(.text.osThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for svcRtxThreadFlagsClear
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear) refers to rtx_thread.o(.text.osThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for svcRtxThreadFlagsGet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet) refers to rtx_thread.o(.text.osThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for svcRtxThreadFlagsWait
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait) refers to rtx_thread.o(.text.osThreadFlagsWait) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelay) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.ARM.exidx.text.svcRtxDelay) refers to rtx_delay.o(.text.svcRtxDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelay) refers to rtx_delay.o(.text.svcRtxDelay) for svcRtxDelay
    rtx_delay.o(.ARM.exidx.text.osDelay) refers to rtx_delay.o(.text.osDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for svcRtxDelayUntil
    rtx_delay.o(.ARM.exidx.text.osDelayUntil) refers to rtx_delay.o(.text.osDelayUntil) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for svcRtxMutexNew
    rtx_mutex.o(.ARM.exidx.text.osMutexNew) refers to rtx_mutex.o(.text.osMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for svcRtxMutexGetName
    rtx_mutex.o(.ARM.exidx.text.osMutexGetName) refers to rtx_mutex.o(.text.osMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for svcRtxMutexAcquire
    rtx_mutex.o(.ARM.exidx.text.osMutexAcquire) refers to rtx_mutex.o(.text.osMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for svcRtxMutexRelease
    rtx_mutex.o(.ARM.exidx.text.osMutexRelease) refers to rtx_mutex.o(.text.osMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for svcRtxMutexGetOwner
    rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner) refers to rtx_mutex.o(.text.osMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for svcRtxMutexDelete
    rtx_mutex.o(.ARM.exidx.text.osMutexDelete) refers to rtx_mutex.o(.text.osMutexDelete) for [Anonymous Symbol]
    irq_cm3.o(.text) refers to rtx_system.o(.text.osRtxPendSV_Handler) for osRtxPendSV_Handler
    irq_cm3.o(.text) refers to rtx_system.o(.text.osRtxTick_Handler) for osRtxTick_Handler
    irq_cm3.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    irq_cm3.o(.text) refers to rtx_lib.o(.constdata) for osRtxUserSVC
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_timer.o(.ARM.exidx.text.osRtxTimerTick) refers to rtx_timer.o(.text.osRtxTimerTick) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    rtx_timer.o(.ARM.exidx.text.osRtxTimerThread) refers to rtx_timer.o(.text.osRtxTimerThread) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_timer.o(.text.osRtxTimerThread) for osRtxTimerThread
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for svcRtxTimerNew
    rtx_timer.o(.ARM.exidx.text.osTimerNew) refers to rtx_timer.o(.text.osTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for svcRtxTimerGetName
    rtx_timer.o(.ARM.exidx.text.osTimerGetName) refers to rtx_timer.o(.text.osTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for svcRtxTimerStart
    rtx_timer.o(.ARM.exidx.text.osTimerStart) refers to rtx_timer.o(.text.osTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for svcRtxTimerStop
    rtx_timer.o(.ARM.exidx.text.osTimerStop) refers to rtx_timer.o(.text.osTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for svcRtxTimerIsRunning
    rtx_timer.o(.ARM.exidx.text.osTimerIsRunning) refers to rtx_timer.o(.text.osTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for svcRtxTimerDelete
    rtx_timer.o(.ARM.exidx.text.osTimerDelete) refers to rtx_timer.o(.text.osTimerDelete) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit) refers to rtx_memory.o(.text.osRtxMemoryInit) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for osRtxMemoryPoolPostProcess
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for svcRtxMemoryPoolNew
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.osMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for svcRtxMemoryPoolGetName
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.osMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for svcRtxMemoryPoolAlloc
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.osMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for svcRtxMemoryPoolFree
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for svcRtxMemoryPoolGetCapacity
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.osMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for svcRtxMemoryPoolGetBlockSize
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.osMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for svcRtxMemoryPoolGetCount
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.osMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for svcRtxMemoryPoolGetSpace
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.osMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for svcRtxMemoryPoolDelete
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.osMemoryPoolDelete) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_system.o(.text.osRtxSysTimerAckIRQ) for osRtxSysTimerAckIRQ
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_timer.o(.text.osRtxTimerTick) for osRtxTimerTick
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_system.o(.ARM.exidx.text.osRtxTick_Handler) refers to rtx_system.o(.text.osRtxTick_Handler) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.osRtxSysTimerAckIRQ) refers to rtx_system.o(.text.osRtxSysTimerAckIRQ) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxPendSV_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_system.o(.ARM.exidx.text.osRtxPostProcess) refers to rtx_system.o(.text.osRtxPostProcess) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxSysTimerSetup) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_system.o(.text.osRtxSysTimerSetup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxSysTimerSetup) refers to rtx_system.o(.text.osRtxSysTimerSetup) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.osRtxSysTimerEnable) refers to rtx_system.o(.text.osRtxSysTimerEnable) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.osRtxSysTimerDisable) refers to rtx_system.o(.text.osRtxSysTimerDisable) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxSysTimerGetCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxSysTimerGetCount) refers to rtx_system.o(.text.osRtxSysTimerGetCount) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxSysTimerGetFreq) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxSysTimerGetFreq) refers to rtx_system.o(.text.osRtxSysTimerGetFreq) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for osRtxMessageQueuePostProcess
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for svcRtxMessageQueueGetName
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.osMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for svcRtxMessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for svcRtxMessageQueueGet
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for svcRtxMessageQueueGetCapacity
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.osMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for svcRtxMessageQueueGetMsgSize
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for svcRtxMessageQueueGetCount
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.osMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for svcRtxMessageQueueGetSpace
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.osMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for svcRtxMessageQueueReset
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.osMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for svcRtxMessageQueueDelete
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.osMessageQueueDelete) for [Anonymous Symbol]
    __2snprintf.o(.text) refers to _printf_char_common.o(.text) for _printf_char_common
    __2snprintf.o(.text) refers to _sputc.o(.text) for _sputc
    __2snprintf.o(.text) refers to _snputc.o(.text) for _snputc
    noretval__2snprintf.o(.text) refers to _printf_char_common.o(.text) for _printf_char_common
    noretval__2snprintf.o(.text) refers to _sputc.o(.text) for _sputc
    noretval__2snprintf.o(.text) refers to _snputc.o(.text) for _snputc
    __printf.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    _printf_str.o(.text) refers (Special) to _printf_char.o(.text) for _printf_cs_common
    _printf_dec.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    __printf_flags.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags.o(.text) refers to __printf_flags.o(.constdata) for .constdata
    __printf_ss.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss.o(.text) refers to __printf_flags_ss.o(.constdata) for .constdata
    __printf_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_flags_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_wp.o(.text) refers to __printf_flags_wp.o(.constdata) for .constdata
    __printf_ss_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_ss_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_flags_ss_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss_wp.o(.text) refers to __printf_flags_ss_wp.o(.constdata) for .constdata
    _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) refers (Weak) to _printf_char.o(.text) for _printf_string
    _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) refers (Weak) to _printf_dec.o(.text) for _printf_int_dec
    _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) refers (Special) to _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017) for _printf_percent_end
    rand.o(.emb_text) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000D) for __rt_lib_init_rand_2
    rand.o(.emb_text) refers to rand.o(.text) for _rand_init
    rand.o(.emb_text) refers to rand.o(.bss) for _random_number_data
    rand.o(.text) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000D) for __rt_lib_init_rand_2
    rand.o(.text) refers to rand.o(.bss) for .bss
    rand.o(.bss) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000D) for __rt_lib_init_rand_2
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    aeabi_memset4.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    rt_memclr.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    _printf_char_common.o(.text) refers to __printf.o(.text) for __printf
    _printf_char.o(.text) refers (Weak) to _printf_str.o(.text) for _printf_str
    libinit2.o(.ARM.Collect$$libinit$$0000000D) refers (Weak) to rand.o(.text) for _rand_init
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000026) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000027) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to rtx_lib.o(i._platform_post_stackheap_init) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(i.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_mdr32f9qx.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.rev16_text), (4 bytes).
    Removing main.o(.revsh_text), (4 bytes).
    Removing main.o(.rrx_text), (6 bytes).
    Removing main.o(.constdata), (1596 bytes).
    Removing btn.o(.rev16_text), (4 bytes).
    Removing btn.o(.revsh_text), (4 bytes).
    Removing btn.o(.rrx_text), (6 bytes).
    Removing btn.o(.constdata), (1596 bytes).
    Removing lcd.o(.rev16_text), (4 bytes).
    Removing lcd.o(.revsh_text), (4 bytes).
    Removing lcd.o(.rrx_text), (6 bytes).
    Removing lcd.o(i.LCD_Disable), (160 bytes).
    Removing lcd.o(i.LCD_ReadData), (212 bytes).
    Removing lcd.o(i.LCD_ScrollString), (198 bytes).
    Removing led.o(.rev16_text), (4 bytes).
    Removing led.o(.revsh_text), (4 bytes).
    Removing led.o(.rrx_text), (6 bytes).
    Removing led.o(i.switch_off), (184 bytes).
    Removing led.o(.constdata), (1596 bytes).
    Removing snake.o(.rev16_text), (4 bytes).
    Removing snake.o(.revsh_text), (4 bytes).
    Removing snake.o(.rrx_text), (6 bytes).
    Removing snake.o(.constdata), (1596 bytes).
    Removing rtos.o(.rev16_text), (4 bytes).
    Removing rtos.o(.revsh_text), (4 bytes).
    Removing rtos.o(.rrx_text), (6 bytes).
    Removing rtx_lib.o(.rev16_text), (4 bytes).
    Removing rtx_lib.o(.revsh_text), (4 bytes).
    Removing rtx_lib.o(.rrx_text), (6 bytes).
    Removing rtx_lib.o(i.__user_perthread_libspace), (112 bytes).
    Removing rtx_config.o(.rev16_text), (4 bytes).
    Removing rtx_config.o(.revsh_text), (4 bytes).
    Removing rtx_config.o(.rrx_text), (6 bytes).
    Removing system_mdr32f9qx.o(.rev16_text), (4 bytes).
    Removing system_mdr32f9qx.o(.revsh_text), (4 bytes).
    Removing system_mdr32f9qx.o(.rrx_text), (6 bytes).
    Removing rtx_kernel.o(.text), (0 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetInfo), (66 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelLock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelUnlock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelRestoreLock), (46 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelSuspend), (134 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelResume), (226 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickCount), (14 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickFreq), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount), (4 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq), (4 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetInfo), (112 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelLock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelUnlock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelRestoreLock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelSuspend), (34 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelResume), (34 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelResume), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickCount), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickFreq), (34 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerCount), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerFreq), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.data.irqRtxLibRef), (4 bytes).
    Removing rtx_thread.o(.text), (0 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadListRoot), (26 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListRoot), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadListUnlink), (26 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadDelayInsert), (160 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadDelayRemove), (118 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadBlock), (70 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStackCheck), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetName), (22 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetId), (12 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetState), (22 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSize), (22 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSpace), (74 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSetPriority), (324 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetPriority), (30 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadYield), (142 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSuspend), (330 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadResume), (170 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadDetach), (186 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadJoin), (336 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadTerminate), (664 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetCount), (54 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadEnumerate), (112 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsSet), (486 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsClear), (82 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsGet), (30 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsWait), (194 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadNew), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetName), (34 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetId), (34 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetState), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSize), (34 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSpace), (34 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSetPriority), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetPriority), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadYield), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSuspend), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.osThreadResume), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.osThreadDetach), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osThreadJoin), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadJoin), (8 bytes).
    Removing rtx_thread.o(.text.osThreadTerminate), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetCount), (34 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.osThreadEnumerate), (34 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsSet), (94 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsClear), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsGet), (34 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsWait), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait), (8 bytes).
    Removing rtx_delay.o(.text), (0 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelay), (8 bytes).
    Removing rtx_delay.o(.text.svcRtxDelayUntil), (58 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil), (8 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelay), (8 bytes).
    Removing rtx_delay.o(.text.osDelayUntil), (36 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelayUntil), (8 bytes).
    Removing rtx_mutex.o(.text), (0 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetName), (22 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetOwner), (28 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetName), (34 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetOwner), (34 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexDelete), (8 bytes).
    Removing rtx_timer.o(.text), (0 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerTick), (8 bytes).
    Removing rtx_timer.o(.text.osRtxTimerThread), (42 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerThread), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerNew), (216 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerGetName), (22 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStart), (184 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStop), (82 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerIsRunning), (24 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerDelete), (132 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete), (8 bytes).
    Removing rtx_timer.o(.text.osTimerNew), (72 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.osTimerGetName), (34 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStart), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStop), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.osTimerIsRunning), (34 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.osTimerDelete), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerDelete), (8 bytes).
    Removing rtx_memory.o(.text), (0 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree), (8 bytes).
    Removing rtx_mempool.o(.text), (0 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osRtxMemoryPoolPostProcess), (98 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolNew), (508 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetName), (22 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolAlloc), (122 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolFree), (204 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity), (22 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize), (22 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCount), (22 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace), (26 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolDelete), (204 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolNew), (58 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetName), (34 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolAlloc), (132 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolFree), (154 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCapacity), (52 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetBlockSize), (52 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCount), (52 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetSpace), (56 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolDelete), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete), (8 bytes).
    Removing rtx_system.o(.text), (0 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxTick_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxSysTimerAckIRQ), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPostProcess), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxSysTimerSetup), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxSysTimerEnable), (8 bytes).
    Removing rtx_system.o(.text.osRtxSysTimerDisable), (14 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxSysTimerDisable), (8 bytes).
    Removing rtx_system.o(.text.osRtxSysTimerGetCount), (58 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxSysTimerGetCount), (8 bytes).
    Removing rtx_system.o(.text.osRtxSysTimerGetFreq), (12 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxSysTimerGetFreq), (8 bytes).
    Removing rtx_msgqueue.o(.text), (0 bytes).
    Removing rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess), (446 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueNew), (352 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetName), (22 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGet), (410 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity), (22 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize), (22 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount), (22 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace), (26 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueReset), (394 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueDelete), (142 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueNew), (58 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetName), (34 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGet), (180 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCapacity), (52 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetMsgSize), (52 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCount), (52 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetSpace), (56 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueReset), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueDelete), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete), (8 bytes).

341 unused section(s) (total 19728 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../../../Source/rtx_delay.c              0x00000000   Number         0  rtx_delay.o ABSOLUTE
    ../../../Source/rtx_kernel.c             0x00000000   Number         0  rtx_kernel.o ABSOLUTE
    ../../../Source/rtx_memory.c             0x00000000   Number         0  rtx_memory.o ABSOLUTE
    ../../../Source/rtx_mempool.c            0x00000000   Number         0  rtx_mempool.o ABSOLUTE
    ../../../Source/rtx_msgqueue.c           0x00000000   Number         0  rtx_msgqueue.o ABSOLUTE
    ../../../Source/rtx_mutex.c              0x00000000   Number         0  rtx_mutex.o ABSOLUTE
    ../../../Source/rtx_system.c             0x00000000   Number         0  rtx_system.o ABSOLUTE
    ../../../Source/rtx_thread.c             0x00000000   Number         0  rtx_thread.o ABSOLUTE
    ../../../Source/rtx_timer.c              0x00000000   Number         0  rtx_timer.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/dczerorl2.s                0x00000000   Number         0  __dczerorl2.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  aeabi_memset4.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_v6.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _sputc.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _snputc.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_char.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_str.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_dec.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags_ss_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags_ss.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_char_common.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_ss.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_ss_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_nopercent.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_intcommon.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __2snprintf.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  noretval__2snprintf.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_percent_end.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_d.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_percent.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_s.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  rand.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  rand.o ABSOLUTE
    ../clib/string.c                         0x00000000   Number         0  strlen.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    ..\..\..\Source\ARM\irq_cm3.s            0x00000000   Number         0  irq_cm3.o ABSOLUTE
    C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\Source\rtx_lib.c 0x00000000   Number         0  rtx_lib.o ABSOLUTE
    C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.0.1\\CMSIS\\RTOS2\\RTX\\Source\\rtx_lib.c 0x00000000   Number         0  rtx_lib.o ABSOLUTE
    RTE\CMSIS\RTX_Config.c                   0x00000000   Number         0  rtx_config.o ABSOLUTE
    RTE\Device\MDR1986BE92\startup_MDR32F9Qx.s 0x00000000   Number         0  startup_mdr32f9qx.o ABSOLUTE
    RTE\Device\MDR1986BE92\system_MDR32F9Qx.c 0x00000000   Number         0  system_mdr32f9qx.o ABSOLUTE
    RTE\\CMSIS\\RTX_Config.c                 0x00000000   Number         0  rtx_config.o ABSOLUTE
    RTE\\Device\\MDR1986BE92\\system_MDR32F9Qx.c 0x00000000   Number         0  system_mdr32f9qx.o ABSOLUTE
    btn.c                                    0x00000000   Number         0  btn.o ABSOLUTE
    btn.c                                    0x00000000   Number         0  btn.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    lcd.c                                    0x00000000   Number         0  lcd.o ABSOLUTE
    lcd.c                                    0x00000000   Number         0  lcd.o ABSOLUTE
    led.c                                    0x00000000   Number         0  led.o ABSOLUTE
    led.c                                    0x00000000   Number         0  led.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    rtos.c                                   0x00000000   Number         0  rtos.o ABSOLUTE
    rtos.c                                   0x00000000   Number         0  rtos.o ABSOLUTE
    snake.c                                  0x00000000   Number         0  snake.o ABSOLUTE
    snake.c                                  0x00000000   Number         0  snake.o ABSOLUTE
    RESET                                    0x08000000   Section      192  startup_mdr32f9qx.o(RESET)
    !!!main                                  0x080000c0   Section        8  __main.o(!!!main)
    !!!scatter                               0x080000c8   Section       52  __scatter.o(!!!scatter)
    !!dczerorl2                              0x080000fc   Section       90  __dczerorl2.o(!!dczerorl2)
    !!handler_zi                             0x08000158   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$_printf_percent$$00000000  0x08000174   Section        0  _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000)
    .ARM.Collect$$_printf_percent$$00000009  0x08000174   Section        6  _printf_d.o(.ARM.Collect$$_printf_percent$$00000009)
    .ARM.Collect$$_printf_percent$$00000014  0x0800017a   Section        6  _printf_s.o(.ARM.Collect$$_printf_percent$$00000014)
    .ARM.Collect$$_printf_percent$$00000017  0x08000180   Section        4  _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017)
    .ARM.Collect$$libinit$$00000000          0x08000184   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000002          0x08000186   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    .ARM.Collect$$libinit$$00000004          0x08000186   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$0000000A          0x08000186   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    .ARM.Collect$$libinit$$0000000C          0x08000186   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000D          0x08000186   Section        4  libinit2.o(.ARM.Collect$$libinit$$0000000D)
    .ARM.Collect$$libinit$$0000000E          0x0800018a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000011          0x0800018a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    .ARM.Collect$$libinit$$00000013          0x0800018a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x0800018a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x0800018a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x0800018a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x0800018a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x0800018a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x0800018a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x0800018a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x0800018a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x0800018a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$0000002C          0x0800018a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    .ARM.Collect$$libinit$$0000002E          0x0800018a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x0800018a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x0800018a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000033          0x0800018a   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000033)
    .ARM.Collect$$libshutdown$$00000000      0x0800018c   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x0800018e   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x0800018e   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x0800018e   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x0800018e   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x0800018e   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x0800018e   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x0800018e   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x08000190   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x08000190   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x08000190   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000008          0x08000196   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    .ARM.Collect$$rtentry$$0000000A          0x0800019e   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x080001a2   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x080001a2   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x080001aa   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x080001ac   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x080001ac   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x080001b0   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .emb_text                                0x080001b8   Section       52  rand.o(.emb_text)
    .text                                    0x080001ec   Section       64  startup_mdr32f9qx.o(.text)
    .text                                    0x0800022c   Section      136  irq_cm3.o(.text)
    .text                                    0x080002b4   Section        0  noretval__2snprintf.o(.text)
    .text                                    0x080002e8   Section        0  __printf.o(.text)
    .text                                    0x08000350   Section        0  _printf_str.o(.text)
    .text                                    0x080003a4   Section        0  _printf_dec.o(.text)
    .text                                    0x0800041c   Section        0  rand.o(.text)
    .text                                    0x08000458   Section      138  rt_memcpy_v6.o(.text)
    .text                                    0x080004e2   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x08000546   Section       16  aeabi_memset4.o(.text)
    .text                                    0x08000556   Section       78  rt_memclr_w.o(.text)
    .text                                    0x080005a4   Section        0  heapauxi.o(.text)
    .text                                    0x080005aa   Section        0  _printf_intcommon.o(.text)
    .text                                    0x0800065c   Section        0  _printf_char_common.o(.text)
    _printf_input_char                       0x0800065d   Thumb Code    10  _printf_char_common.o(.text)
    .text                                    0x0800068c   Section        0  _sputc.o(.text)
    .text                                    0x08000696   Section        0  _snputc.o(.text)
    .text                                    0x080006a6   Section        0  _printf_char.o(.text)
    .text                                    0x080006d2   Section       74  sys_stackheap_outer.o(.text)
    .text                                    0x0800071c   Section        0  exit.o(.text)
    .text                                    0x08000730   Section        8  libspace.o(.text)
    .text                                    0x08000738   Section        2  use_no_semi.o(.text)
    .text                                    0x0800073a   Section        0  indicate_semi.o(.text)
    .text                                    0x0800073c   Section        0  sys_exit.o(.text)
    [Anonymous Symbol]                       0x08000748   Section        0  rtx_delay.o(.text.osDelay)
    [Anonymous Symbol]                       0x0800076c   Section        0  rtx_kernel.o(.text.osKernelGetState)
    [Anonymous Symbol]                       0x080007a8   Section        0  rtx_kernel.o(.text.osKernelInitialize)
    [Anonymous Symbol]                       0x080007e4   Section        0  rtx_kernel.o(.text.osKernelStart)
    [Anonymous Symbol]                       0x08000820   Section        0  rtx_msgqueue.o(.text.osMessageQueuePut)
    [Anonymous Symbol]                       0x080008a4   Section        0  rtx_mutex.o(.text.osMutexAcquire)
    [Anonymous Symbol]                       0x080008c8   Section        0  rtx_mutex.o(.text.osMutexDelete)
    [Anonymous Symbol]                       0x080008ec   Section        0  rtx_mutex.o(.text.osMutexNew)
    [Anonymous Symbol]                       0x08000928   Section        0  rtx_mutex.o(.text.osMutexRelease)
    [Anonymous Symbol]                       0x0800094c   Section        0  rtx_memory.o(.text.osRtxMemoryAlloc)
    [Anonymous Symbol]                       0x080009bc   Section        0  rtx_memory.o(.text.osRtxMemoryFree)
    [Anonymous Symbol]                       0x08000a14   Section        0  rtx_memory.o(.text.osRtxMemoryInit)
    [Anonymous Symbol]                       0x08000a44   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    [Anonymous Symbol]                       0x08000a90   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    [Anonymous Symbol]                       0x08000aec   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    [Anonymous Symbol]                       0x08000b3c   Section        0  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    [Anonymous Symbol]                       0x08000b88   Section        0  rtx_system.o(.text.osRtxPendSV_Handler)
    [Anonymous Symbol]                       0x08000c30   Section        0  rtx_system.o(.text.osRtxPostProcess)
    [Anonymous Symbol]                       0x08000ca8   Section        0  rtx_system.o(.text.osRtxSysTimerAckIRQ)
    [Anonymous Symbol]                       0x08000cb4   Section        0  rtx_system.o(.text.osRtxSysTimerEnable)
    [Anonymous Symbol]                       0x08000cc4   Section        0  rtx_system.o(.text.osRtxSysTimerSetup)
    [Anonymous Symbol]                       0x08000d00   Section        0  rtx_thread.o(.text.osRtxThreadDelayTick)
    [Anonymous Symbol]                       0x08000d88   Section        0  rtx_thread.o(.text.osRtxThreadDispatch)
    [Anonymous Symbol]                       0x08000ee0   Section        0  rtx_thread.o(.text.osRtxThreadListGet)
    [Anonymous Symbol]                       0x08000efc   Section        0  rtx_thread.o(.text.osRtxThreadListPut)
    [Anonymous Symbol]                       0x08000f34   Section        0  rtx_thread.o(.text.osRtxThreadListRemove)
    [Anonymous Symbol]                       0x08000f50   Section        0  rtx_thread.o(.text.osRtxThreadListSort)
    [Anonymous Symbol]                       0x08000fb0   Section        0  rtx_thread.o(.text.osRtxThreadPostProcess)
    [Anonymous Symbol]                       0x080010d8   Section        0  rtx_thread.o(.text.osRtxThreadReadyPut)
    [Anonymous Symbol]                       0x08001120   Section        0  rtx_thread.o(.text.osRtxThreadRegPtr)
    [Anonymous Symbol]                       0x08001128   Section        0  rtx_thread.o(.text.osRtxThreadStackCheck)
    [Anonymous Symbol]                       0x08001158   Section        0  rtx_thread.o(.text.osRtxThreadSwitch)
    [Anonymous Symbol]                       0x0800116c   Section        0  rtx_thread.o(.text.osRtxThreadWaitEnter)
    [Anonymous Symbol]                       0x08001250   Section        0  rtx_thread.o(.text.osRtxThreadWaitExit)
    [Anonymous Symbol]                       0x08001310   Section        0  rtx_system.o(.text.osRtxTick_Handler)
    [Anonymous Symbol]                       0x08001388   Section        0  rtx_timer.o(.text.osRtxTimerTick)
    [Anonymous Symbol]                       0x08001434   Section        0  rtx_thread.o(.text.osThreadExit)
    [Anonymous Symbol]                       0x08001444   Section        0  rtx_thread.o(.text.osThreadNew)
    [Anonymous Symbol]                       0x08001480   Section        0  rtx_delay.o(.text.svcRtxDelay)
    [Anonymous Symbol]                       0x08001494   Section        0  rtx_kernel.o(.text.svcRtxKernelGetState)
    [Anonymous Symbol]                       0x080014a0   Section        0  rtx_kernel.o(.text.svcRtxKernelInitialize)
    [Anonymous Symbol]                       0x0800164c   Section        0  rtx_kernel.o(.text.svcRtxKernelStart)
    [Anonymous Symbol]                       0x080016e4   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    [Anonymous Symbol]                       0x080017fc   Section        0  rtx_mutex.o(.text.svcRtxMutexAcquire)
    [Anonymous Symbol]                       0x0800189c   Section        0  rtx_mutex.o(.text.svcRtxMutexDelete)
    [Anonymous Symbol]                       0x08001974   Section        0  rtx_mutex.o(.text.svcRtxMutexNew)
    [Anonymous Symbol]                       0x080019e8   Section        0  rtx_mutex.o(.text.svcRtxMutexRelease)
    [Anonymous Symbol]                       0x08001ab0   Section        0  rtx_thread.o(.text.svcRtxThreadExit)
    [Anonymous Symbol]                       0x08001bf4   Section        0  rtx_thread.o(.text.svcRtxThreadNew)
    i.BTN_Init                               0x08001e34   Section        0  btn.o(i.BTN_Init)
    i.LCD_ClearPage                          0x0800204c   Section        0  lcd.o(i.LCD_ClearPage)
    i.LCD_ClearScreen                        0x08002086   Section        0  lcd.o(i.LCD_ClearScreen)
    i.LCD_ClearString                        0x080020ae   Section        0  lcd.o(i.LCD_ClearString)
    i.LCD_DataBusDirection                   0x080020c4   Section        0  lcd.o(i.LCD_DataBusDirection)
    i.LCD_Enable                             0x08002104   Section        0  lcd.o(i.LCD_Enable)
    i.LCD_Init                               0x080021a4   Section        0  lcd.o(i.LCD_Init)
    i.LCD_PortCfg                            0x0800226c   Section        0  lcd.o(i.LCD_PortCfg)
    i.LCD_PutImage                           0x080023ac   Section        0  lcd.o(i.LCD_PutImage)
    i.LCD_PutString                          0x080024a6   Section        0  lcd.o(i.LCD_PutString)
    i.LCD_PutSymbol                          0x080024e0   Section        0  lcd.o(i.LCD_PutSymbol)
    i.LCD_ReadStatus                         0x080025cc   Section        0  lcd.o(i.LCD_ReadStatus)
    i.LCD_Reset                              0x08002688   Section        0  lcd.o(i.LCD_Reset)
    i.LCD_SetAddress                         0x080026f8   Section        0  lcd.o(i.LCD_SetAddress)
    i.LCD_SetDataBits                        0x0800279c   Section        0  lcd.o(i.LCD_SetDataBits)
    i.LCD_SetPage                            0x080027e0   Section        0  lcd.o(i.LCD_SetPage)
    i.LCD_WriteData                          0x08002884   Section        0  lcd.o(i.LCD_WriteData)
    i.RTOS_Init                              0x08002924   Section        0  rtos.o(i.RTOS_Init)
    i.SystemCoreClockUpdate                  0x080029e8   Section        0  system_mdr32f9qx.o(i.SystemCoreClockUpdate)
    i.SystemInit                             0x08002a78   Section        0  system_mdr32f9qx.o(i.SystemInit)
    i.Thread_DownButtonCheck                 0x08002ab8   Section        0  btn.o(i.Thread_DownButtonCheck)
    i.Thread_LeftButtonCheck                 0x08002b10   Section        0  btn.o(i.Thread_LeftButtonCheck)
    i.Thread_RightButtonCheck                0x08002b68   Section        0  btn.o(i.Thread_RightButtonCheck)
    i.Thread_SelectButtonCheck               0x08002bc0   Section        0  btn.o(i.Thread_SelectButtonCheck)
    i.Thread_UpButtonCheck                   0x08002c2c   Section        0  btn.o(i.Thread_UpButtonCheck)
    i._mutex_acquire                         0x08002c84   Section        0  rtx_lib.o(i._mutex_acquire)
    __tagsym$$used                           0x08002c85   Number         0  rtx_lib.o(i._mutex_acquire)
    i._mutex_free                            0x08002c9a   Section        0  rtx_lib.o(i._mutex_free)
    __tagsym$$used                           0x08002c9b   Number         0  rtx_lib.o(i._mutex_free)
    i._mutex_initialize                      0x08002ca6   Section        0  rtx_lib.o(i._mutex_initialize)
    __tagsym$$used                           0x08002ca7   Number         0  rtx_lib.o(i._mutex_initialize)
    i._mutex_release                         0x08002cc6   Section        0  rtx_lib.o(i._mutex_release)
    __tagsym$$used                           0x08002cc7   Number         0  rtx_lib.o(i._mutex_release)
    i._platform_post_stackheap_init          0x08002cd8   Section        0  rtx_lib.o(i._platform_post_stackheap_init)
    i.all_off                                0x08002ce0   Section        0  led.o(i.all_off)
    i.delay                                  0x08002d24   Section        0  snake.o(i.delay)
    i.draw_food                              0x08002d34   Section        0  snake.o(i.draw_food)
    i.draw_snake                             0x08002d42   Section        0  snake.o(i.draw_snake)
    i.generate_food                          0x08002d76   Section        0  snake.o(i.generate_food)
    i.init_snake                             0x08002dfa   Section        0  snake.o(i.init_snake)
    i.main                                   0x08002e14   Section        0  main.o(i.main)
    i.move_snake                             0x08002e74   Section        0  snake.o(i.move_snake)
    i.osRtxErrorNotify                       0x08003044   Section        0  rtx_config.o(i.osRtxErrorNotify)
    i.osRtxIdleThread                        0x08003064   Section        0  rtx_config.o(i.osRtxIdleThread)
    i.os_kernel_is_active                    0x08003068   Section        0  rtx_lib.o(i.os_kernel_is_active)
    os_kernel_is_active                      0x08003069   Thumb Code    32  rtx_lib.o(i.os_kernel_is_active)
    i.play_snake                             0x0800308c   Section        0  snake.o(i.play_snake)
    i.ports_init                             0x08003144   Section        0  led.o(i.ports_init)
    i.select_led                             0x08003288   Section        0  led.o(i.select_led)
    i.set_direction                          0x080032ac   Section        0  snake.o(i.set_direction)
    i.set_registers                          0x08003390   Section        0  led.o(i.set_registers)
    i.shiftOut                               0x08003430   Section        0  led.o(i.shiftOut)
    i.switch_on                              0x080034b8   Section        0  led.o(i.switch_on)
    .constdata                               0x08003570   Section     1596  lcd.o(.constdata)
    font                                     0x08003570   Data        1344  lcd.o(.constdata)
    header                                   0x08003ab0   Data         252  lcd.o(.constdata)
    .constdata                               0x08003bac   Section     1776  rtos.o(.constdata)
    font                                     0x08003bac   Data        1344  rtos.o(.constdata)
    header                                   0x080040ec   Data         252  rtos.o(.constdata)
    <Data1>                                  0x080041e8   Data          36  rtos.o(.constdata)
    <Data2>                                  0x0800420c   Data          36  rtos.o(.constdata)
    <Data3>                                  0x08004230   Data          36  rtos.o(.constdata)
    <Data4>                                  0x08004254   Data          36  rtos.o(.constdata)
    <Data5>                                  0x08004278   Data          36  rtos.o(.constdata)
    .constdata                               0x0800429c   Section      100  rtx_lib.o(.constdata)
    os_idle_thread_attr                      0x0800429c   Data          36  rtx_lib.o(.constdata)
    os_timer_thread_attr                     0x080042c0   Data          36  rtx_lib.o(.constdata)
    os_timer_mq_attr                         0x080042e4   Data          24  rtx_lib.o(.constdata)
    .constdata                               0x08004300   Section        1  irq_cm3.o(.constdata)
    .conststring                             0x08004304   Section       47  main.o(.conststring)
    .rodata                                  0x08004334   Section      104  rtx_lib.o(.rodata)
    __tagsym$$used                           0x08004334   Number         0  rtx_lib.o(.rodata)
    [Anonymous Symbol]                       0x0800439c   Section        0  rtx_kernel.o(.rodata.str1.4)
    .L.str                                   0x0800439c   Data          11  rtx_kernel.o(.rodata.str1.4)
    .bss.os                                  0x20000000   Section     4656  rtx_lib.o(.bss.os)
    os_mem                                   0x20000000   Data        4096  rtx_lib.o(.bss.os)
    os_isr_queue                             0x20001000   Data          64  rtx_lib.o(.bss.os)
    os_libspace                              0x20001040   Data         480  rtx_lib.o(.bss.os)
    os_libspace_id                           0x20001220   Data          16  rtx_lib.o(.bss.os)
    .bss.os.msgqueue.cb                      0x20001230   Section       52  rtx_lib.o(.bss.os.msgqueue.cb)
    os_timer_mq_cb                           0x20001230   Data          52  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.msgqueue.mem                     0x20001264   Section       80  rtx_lib.o(.bss.os.msgqueue.mem)
    os_timer_mq_data                         0x20001264   Data          80  rtx_lib.o(.bss.os.msgqueue.mem)
    .bss.os.thread.cb                        0x200012b4   Section      136  rtx_lib.o(.bss.os.thread.cb)
    os_idle_thread_cb                        0x200012b4   Data          68  rtx_lib.o(.bss.os.thread.cb)
    os_timer_thread_cb                       0x200012f8   Data          68  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.stack                     0x20001340   Section      400  rtx_lib.o(.bss.os.thread.stack)
    os_idle_thread_stack                     0x20001340   Data         200  rtx_lib.o(.bss.os.thread.stack)
    os_timer_thread_stack                    0x20001408   Data         200  rtx_lib.o(.bss.os.thread.stack)
    .data                                    0x200014d0   Section       24  main.o(.data)
    .data                                    0x200014e8   Section       28  led.o(.data)
    .data                                    0x20001504   Section        1  snake.o(.data)
    .data                                    0x20001508   Section        5  rtx_lib.o(.data)
    os_kernel_active                         0x2000150c   Data           1  rtx_lib.o(.data)
    .data                                    0x20001510   Section        4  system_mdr32f9qx.o(.data)
    .bss                                     0x200015c0   Section      444  snake.o(.bss)
    .bss                                     0x2000177c   Section      228  rand.o(.bss)
    .bss                                     0x20001860   Section       96  libspace.o(.bss)
    HEAP                                     0x200018c0   Section      512  startup_mdr32f9qx.o(HEAP)
    Heap_Mem                                 0x200018c0   Data         512  startup_mdr32f9qx.o(HEAP)
    STACK                                    0x20001ac0   Section     1024  startup_mdr32f9qx.o(STACK)
    Stack_Mem                                0x20001ac0   Data        1024  startup_mdr32f9qx.o(STACK)
    __initial_sp                             0x20001ec0   Data           0  startup_mdr32f9qx.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$P$D$K$B$S$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_use_no_argv                        0x00000000   Number         0  main.o ABSOLUTE
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _printf_mbtowc                            - Undefined Weak Reference
    _printf_post_padding                      - Undefined Weak Reference
    _printf_pre_padding                       - Undefined Weak Reference
    _printf_truncate_signed                   - Undefined Weak Reference
    _printf_truncate_unsigned                 - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_Size                           0x000000c0   Number         0  startup_mdr32f9qx.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_mdr32f9qx.o(RESET)
    __Vectors_End                            0x080000c0   Data           0  startup_mdr32f9qx.o(RESET)
    __main                                   0x080000c1   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x080000c9   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x080000c9   Thumb Code    44  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x080000c9   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x080000d7   Thumb Code     0  __scatter.o(!!!scatter)
    __decompress                             0x080000fd   Thumb Code    90  __dczerorl2.o(!!dczerorl2)
    __decompress1                            0x080000fd   Thumb Code     0  __dczerorl2.o(!!dczerorl2)
    __scatterload_zeroinit                   0x08000159   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    _printf_d                                0x08000175   Thumb Code     0  _printf_d.o(.ARM.Collect$$_printf_percent$$00000009)
    _printf_percent                          0x08000175   Thumb Code     0  _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000)
    _printf_s                                0x0800017b   Thumb Code     0  _printf_s.o(.ARM.Collect$$_printf_percent$$00000014)
    _printf_percent_end                      0x08000181   Thumb Code     0  _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017)
    __rt_lib_init                            0x08000185   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_fp_1                       0x08000187   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    __rt_lib_init_heap_1                     0x08000187   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    __rt_lib_init_preinit_1                  0x08000187   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_rand_2                     0x08000187   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000D)
    __rt_lib_init_user_alloc_1               0x08000187   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_init_alloca_1                   0x0800018b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_argv_1                     0x0800018b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    __rt_lib_init_atexit_1                   0x0800018b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_clock_1                    0x0800018b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_cpp_1                      0x0800018b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_exceptions_1               0x0800018b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_fp_trap_1                  0x0800018b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_getenv_1                   0x0800018b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_lc_collate_1               0x0800018b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    __rt_lib_init_lc_ctype_1                 0x0800018b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_monetary_1              0x0800018b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_numeric_1               0x0800018b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_time_1                  0x0800018b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_rand_1                     0x0800018b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_init_return                     0x0800018b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000033)
    __rt_lib_init_signal_1                   0x0800018b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_stdio_1                    0x0800018b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_shutdown                        0x0800018d   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x0800018f   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x0800018f   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x0800018f   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x0800018f   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x0800018f   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x0800018f   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x0800018f   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x08000191   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x08000191   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x08000191   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_postsh_1                      0x08000197   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    __rt_entry_li                            0x0800019f   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_main                          0x080001a3   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x080001a3   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x080001ab   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x080001ad   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x080001ad   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x080001b1   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    rand                                     0x080001b9   Thumb Code    48  rand.o(.emb_text)
    Reset_Handler                            0x080001ed   Thumb Code     8  startup_mdr32f9qx.o(.text)
    NMI_Handler                              0x080001f5   Thumb Code     2  startup_mdr32f9qx.o(.text)
    HardFault_Handler                        0x080001f7   Thumb Code     2  startup_mdr32f9qx.o(.text)
    MemManage_Handler                        0x080001f9   Thumb Code     2  startup_mdr32f9qx.o(.text)
    BusFault_Handler                         0x080001fb   Thumb Code     2  startup_mdr32f9qx.o(.text)
    UsageFault_Handler                       0x080001fd   Thumb Code     2  startup_mdr32f9qx.o(.text)
    DebugMon_Handler                         0x08000201   Thumb Code     2  startup_mdr32f9qx.o(.text)
    ADC_IRQHandler                           0x08000207   Thumb Code     0  startup_mdr32f9qx.o(.text)
    BACKUP_IRQHandler                        0x08000207   Thumb Code     0  startup_mdr32f9qx.o(.text)
    CAN1_IRQHandler                          0x08000207   Thumb Code     0  startup_mdr32f9qx.o(.text)
    CAN2_IRQHandler                          0x08000207   Thumb Code     0  startup_mdr32f9qx.o(.text)
    COMPARATOR_IRQHandler                    0x08000207   Thumb Code     0  startup_mdr32f9qx.o(.text)
    DMA_IRQHandler                           0x08000207   Thumb Code     0  startup_mdr32f9qx.o(.text)
    EXT_INT1_IRQHandler                      0x08000207   Thumb Code     0  startup_mdr32f9qx.o(.text)
    EXT_INT2_IRQHandler                      0x08000207   Thumb Code     0  startup_mdr32f9qx.o(.text)
    EXT_INT3_IRQHandler                      0x08000207   Thumb Code     0  startup_mdr32f9qx.o(.text)
    EXT_INT4_IRQHandler                      0x08000207   Thumb Code     0  startup_mdr32f9qx.o(.text)
    I2C_IRQHandler                           0x08000207   Thumb Code     0  startup_mdr32f9qx.o(.text)
    POWER_IRQHandler                         0x08000207   Thumb Code     0  startup_mdr32f9qx.o(.text)
    SSP1_IRQHandler                          0x08000207   Thumb Code     0  startup_mdr32f9qx.o(.text)
    SSP2_IRQHandler                          0x08000207   Thumb Code     0  startup_mdr32f9qx.o(.text)
    Timer1_IRQHandler                        0x08000207   Thumb Code     0  startup_mdr32f9qx.o(.text)
    Timer2_IRQHandler                        0x08000207   Thumb Code     0  startup_mdr32f9qx.o(.text)
    Timer3_IRQHandler                        0x08000207   Thumb Code     0  startup_mdr32f9qx.o(.text)
    UART1_IRQHandler                         0x08000207   Thumb Code     0  startup_mdr32f9qx.o(.text)
    UART2_IRQHandler                         0x08000207   Thumb Code     0  startup_mdr32f9qx.o(.text)
    USB_IRQHandler                           0x08000207   Thumb Code     0  startup_mdr32f9qx.o(.text)
    WWDG_IRQHandler                          0x08000207   Thumb Code     0  startup_mdr32f9qx.o(.text)
    __user_initial_stackheap                 0x08000209   Thumb Code     0  startup_mdr32f9qx.o(.text)
    SVC_Handler                              0x0800022d   Thumb Code    96  irq_cm3.o(.text)
    PendSV_Handler                           0x0800028d   Thumb Code    16  irq_cm3.o(.text)
    SysTick_Handler                          0x0800029d   Thumb Code    16  irq_cm3.o(.text)
    __2snprintf                              0x080002b5   Thumb Code    48  noretval__2snprintf.o(.text)
    __printf                                 0x080002e9   Thumb Code   104  __printf.o(.text)
    _printf_str                              0x08000351   Thumb Code    82  _printf_str.o(.text)
    _printf_int_dec                          0x080003a5   Thumb Code   104  _printf_dec.o(.text)
    srand                                    0x0800041d   Thumb Code    42  rand.o(.text)
    _rand_init                               0x08000447   Thumb Code     4  rand.o(.text)
    __aeabi_memcpy                           0x08000459   Thumb Code     0  rt_memcpy_v6.o(.text)
    __rt_memcpy                              0x08000459   Thumb Code   138  rt_memcpy_v6.o(.text)
    _memcpy_lastbytes                        0x080004bf   Thumb Code     0  rt_memcpy_v6.o(.text)
    __aeabi_memcpy4                          0x080004e3   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x080004e3   Thumb Code     0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x080004e3   Thumb Code   100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x0800052b   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memset4                          0x08000547   Thumb Code    16  aeabi_memset4.o(.text)
    __aeabi_memset8                          0x08000547   Thumb Code     0  aeabi_memset4.o(.text)
    __aeabi_memclr4                          0x08000557   Thumb Code     0  rt_memclr_w.o(.text)
    __aeabi_memclr8                          0x08000557   Thumb Code     0  rt_memclr_w.o(.text)
    __rt_memclr_w                            0x08000557   Thumb Code    78  rt_memclr_w.o(.text)
    _memset_w                                0x0800055b   Thumb Code     0  rt_memclr_w.o(.text)
    __use_two_region_memory                  0x080005a5   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x080005a7   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x080005a9   Thumb Code     2  heapauxi.o(.text)
    _printf_int_common                       0x080005ab   Thumb Code   178  _printf_intcommon.o(.text)
    _printf_char_common                      0x08000667   Thumb Code    32  _printf_char_common.o(.text)
    _sputc                                   0x0800068d   Thumb Code    10  _sputc.o(.text)
    _snputc                                  0x08000697   Thumb Code    16  _snputc.o(.text)
    _printf_cs_common                        0x080006a7   Thumb Code    20  _printf_char.o(.text)
    _printf_char                             0x080006bb   Thumb Code    16  _printf_char.o(.text)
    _printf_string                           0x080006cb   Thumb Code     8  _printf_char.o(.text)
    __user_setup_stackheap                   0x080006d3   Thumb Code    74  sys_stackheap_outer.o(.text)
    exit                                     0x0800071d   Thumb Code    18  exit.o(.text)
    __user_libspace                          0x08000731   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x08000731   Thumb Code     0  libspace.o(.text)
    __I$use$semihosting                      0x08000739   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x08000739   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x0800073b   Thumb Code     0  indicate_semi.o(.text)
    _sys_exit                                0x0800073d   Thumb Code     8  sys_exit.o(.text)
    osDelay                                  0x08000749   Thumb Code    36  rtx_delay.o(.text.osDelay)
    osKernelGetState                         0x0800076d   Thumb Code    58  rtx_kernel.o(.text.osKernelGetState)
    osKernelInitialize                       0x080007a9   Thumb Code    60  rtx_kernel.o(.text.osKernelInitialize)
    osKernelStart                            0x080007e5   Thumb Code    60  rtx_kernel.o(.text.osKernelStart)
    osMessageQueuePut                        0x08000821   Thumb Code   132  rtx_msgqueue.o(.text.osMessageQueuePut)
    osMutexAcquire                           0x080008a5   Thumb Code    36  rtx_mutex.o(.text.osMutexAcquire)
    osMutexDelete                            0x080008c9   Thumb Code    36  rtx_mutex.o(.text.osMutexDelete)
    osMutexNew                               0x080008ed   Thumb Code    58  rtx_mutex.o(.text.osMutexNew)
    osMutexRelease                           0x08000929   Thumb Code    36  rtx_mutex.o(.text.osMutexRelease)
    osRtxMemoryAlloc                         0x0800094d   Thumb Code   110  rtx_memory.o(.text.osRtxMemoryAlloc)
    osRtxMemoryFree                          0x080009bd   Thumb Code    88  rtx_memory.o(.text.osRtxMemoryFree)
    osRtxMemoryInit                          0x08000a15   Thumb Code    48  rtx_memory.o(.text.osRtxMemoryInit)
    osRtxMemoryPoolAlloc                     0x08000a45   Thumb Code    76  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    osRtxMemoryPoolFree                      0x08000a91   Thumb Code    90  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    osRtxMemoryPoolInit                      0x08000aed   Thumb Code    80  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxMutexOwnerRelease                   0x08000b3d   Thumb Code    76  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    osRtxPendSV_Handler                      0x08000b89   Thumb Code   168  rtx_system.o(.text.osRtxPendSV_Handler)
    osRtxPostProcess                         0x08000c31   Thumb Code   120  rtx_system.o(.text.osRtxPostProcess)
    osRtxSysTimerAckIRQ                      0x08000ca9   Thumb Code    12  rtx_system.o(.text.osRtxSysTimerAckIRQ)
    osRtxSysTimerEnable                      0x08000cb5   Thumb Code    14  rtx_system.o(.text.osRtxSysTimerEnable)
    osRtxSysTimerSetup                       0x08000cc5   Thumb Code    58  rtx_system.o(.text.osRtxSysTimerSetup)
    osRtxThreadDelayTick                     0x08000d01   Thumb Code   136  rtx_thread.o(.text.osRtxThreadDelayTick)
    osRtxThreadDispatch                      0x08000d89   Thumb Code   344  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadListGet                       0x08000ee1   Thumb Code    26  rtx_thread.o(.text.osRtxThreadListGet)
    osRtxThreadListPut                       0x08000efd   Thumb Code    56  rtx_thread.o(.text.osRtxThreadListPut)
    osRtxThreadListRemove                    0x08000f35   Thumb Code    26  rtx_thread.o(.text.osRtxThreadListRemove)
    osRtxThreadListSort                      0x08000f51   Thumb Code    96  rtx_thread.o(.text.osRtxThreadListSort)
    osRtxThreadPostProcess                   0x08000fb1   Thumb Code   296  rtx_thread.o(.text.osRtxThreadPostProcess)
    osRtxThreadReadyPut                      0x080010d9   Thumb Code    72  rtx_thread.o(.text.osRtxThreadReadyPut)
    osRtxThreadRegPtr                        0x08001121   Thumb Code     6  rtx_thread.o(.text.osRtxThreadRegPtr)
    osRtxThreadStackCheck                    0x08001129   Thumb Code    46  rtx_thread.o(.text.osRtxThreadStackCheck)
    osRtxThreadSwitch                        0x08001159   Thumb Code    18  rtx_thread.o(.text.osRtxThreadSwitch)
    osRtxThreadWaitEnter                     0x0800116d   Thumb Code   226  rtx_thread.o(.text.osRtxThreadWaitEnter)
    osRtxThreadWaitExit                      0x08001251   Thumb Code   190  rtx_thread.o(.text.osRtxThreadWaitExit)
    osRtxTick_Handler                        0x08001311   Thumb Code   120  rtx_system.o(.text.osRtxTick_Handler)
    osRtxTimerTick                           0x08001389   Thumb Code   170  rtx_timer.o(.text.osRtxTimerTick)
    osThreadExit                             0x08001435   Thumb Code    14  rtx_thread.o(.text.osThreadExit)
    osThreadNew                              0x08001445   Thumb Code    58  rtx_thread.o(.text.osThreadNew)
    svcRtxDelay                              0x08001481   Thumb Code    20  rtx_delay.o(.text.svcRtxDelay)
    svcRtxKernelGetState                     0x08001495   Thumb Code    12  rtx_kernel.o(.text.svcRtxKernelGetState)
    svcRtxKernelInitialize                   0x080014a1   Thumb Code   428  rtx_kernel.o(.text.svcRtxKernelInitialize)
    svcRtxKernelStart                        0x0800164d   Thumb Code   150  rtx_kernel.o(.text.svcRtxKernelStart)
    svcRtxMessageQueuePut                    0x080016e5   Thumb Code   280  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    svcRtxMutexAcquire                       0x080017fd   Thumb Code   158  rtx_mutex.o(.text.svcRtxMutexAcquire)
    svcRtxMutexDelete                        0x0800189d   Thumb Code   214  rtx_mutex.o(.text.svcRtxMutexDelete)
    svcRtxMutexNew                           0x08001975   Thumb Code   114  rtx_mutex.o(.text.svcRtxMutexNew)
    svcRtxMutexRelease                       0x080019e9   Thumb Code   200  rtx_mutex.o(.text.svcRtxMutexRelease)
    svcRtxThreadExit                         0x08001ab1   Thumb Code   322  rtx_thread.o(.text.svcRtxThreadExit)
    svcRtxThreadNew                          0x08001bf5   Thumb Code   576  rtx_thread.o(.text.svcRtxThreadNew)
    BTN_Init                                 0x08001e35   Thumb Code   520  btn.o(i.BTN_Init)
    LCD_ClearPage                            0x0800204d   Thumb Code    58  lcd.o(i.LCD_ClearPage)
    LCD_ClearScreen                          0x08002087   Thumb Code    40  lcd.o(i.LCD_ClearScreen)
    LCD_ClearString                          0x080020af   Thumb Code    22  lcd.o(i.LCD_ClearString)
    LCD_DataBusDirection                     0x080020c5   Thumb Code    54  lcd.o(i.LCD_DataBusDirection)
    LCD_Enable                               0x08002105   Thumb Code   142  lcd.o(i.LCD_Enable)
    LCD_Init                                 0x080021a5   Thumb Code   176  lcd.o(i.LCD_Init)
    LCD_PortCfg                              0x0800226d   Thumb Code   298  lcd.o(i.LCD_PortCfg)
    LCD_PutImage                             0x080023ad   Thumb Code   250  lcd.o(i.LCD_PutImage)
    LCD_PutString                            0x080024a7   Thumb Code    58  lcd.o(i.LCD_PutString)
    LCD_PutSymbol                            0x080024e1   Thumb Code   232  lcd.o(i.LCD_PutSymbol)
    LCD_ReadStatus                           0x080025cd   Thumb Code   162  lcd.o(i.LCD_ReadStatus)
    LCD_Reset                                0x08002689   Thumb Code    96  lcd.o(i.LCD_Reset)
    LCD_SetAddress                           0x080026f9   Thumb Code   146  lcd.o(i.LCD_SetAddress)
    LCD_SetDataBits                          0x0800279d   Thumb Code    60  lcd.o(i.LCD_SetDataBits)
    LCD_SetPage                              0x080027e1   Thumb Code   146  lcd.o(i.LCD_SetPage)
    LCD_WriteData                            0x08002885   Thumb Code   144  lcd.o(i.LCD_WriteData)
    RTOS_Init                                0x08002925   Thumb Code   156  rtos.o(i.RTOS_Init)
    SystemCoreClockUpdate                    0x080029e9   Thumb Code   130  system_mdr32f9qx.o(i.SystemCoreClockUpdate)
    SystemInit                               0x08002a79   Thumb Code    54  system_mdr32f9qx.o(i.SystemInit)
    Thread_DownButtonCheck                   0x08002ab9   Thumb Code    76  btn.o(i.Thread_DownButtonCheck)
    Thread_LeftButtonCheck                   0x08002b11   Thumb Code    76  btn.o(i.Thread_LeftButtonCheck)
    Thread_RightButtonCheck                  0x08002b69   Thumb Code    76  btn.o(i.Thread_RightButtonCheck)
    Thread_SelectButtonCheck                 0x08002bc1   Thumb Code    94  btn.o(i.Thread_SelectButtonCheck)
    Thread_UpButtonCheck                     0x08002c2d   Thumb Code    76  btn.o(i.Thread_UpButtonCheck)
    _mutex_acquire                           0x08002c85   Thumb Code    22  rtx_lib.o(i._mutex_acquire)
    _mutex_free                              0x08002c9b   Thumb Code    12  rtx_lib.o(i._mutex_free)
    _mutex_initialize                        0x08002ca7   Thumb Code    32  rtx_lib.o(i._mutex_initialize)
    _mutex_release                           0x08002cc7   Thumb Code    18  rtx_lib.o(i._mutex_release)
    _platform_post_stackheap_init            0x08002cd9   Thumb Code     8  rtx_lib.o(i._platform_post_stackheap_init)
    all_off                                  0x08002ce1   Thumb Code    38  led.o(i.all_off)
    delay                                    0x08002d25   Thumb Code    12  snake.o(i.delay)
    draw_food                                0x08002d35   Thumb Code    14  snake.o(i.draw_food)
    draw_snake                               0x08002d43   Thumb Code    52  snake.o(i.draw_snake)
    generate_food                            0x08002d77   Thumb Code   132  snake.o(i.generate_food)
    init_snake                               0x08002dfb   Thumb Code    26  snake.o(i.init_snake)
    main                                     0x08002e15   Thumb Code    72  main.o(i.main)
    move_snake                               0x08002e75   Thumb Code   442  snake.o(i.move_snake)
    osRtxErrorNotify                         0x08003045   Thumb Code    32  rtx_config.o(i.osRtxErrorNotify)
    osRtxIdleThread                          0x08003065   Thumb Code     4  rtx_config.o(i.osRtxIdleThread)
    play_snake                               0x0800308d   Thumb Code   152  snake.o(i.play_snake)
    ports_init                               0x08003145   Thumb Code   316  led.o(i.ports_init)
    select_led                               0x08003289   Thumb Code    36  led.o(i.select_led)
    set_direction                            0x080032ad   Thumb Code   226  snake.o(i.set_direction)
    set_registers                            0x08003391   Thumb Code   126  led.o(i.set_registers)
    shiftOut                                 0x08003431   Thumb Code   130  led.o(i.shiftOut)
    switch_on                                0x080034b9   Thumb Code   154  led.o(i.switch_on)
    osRtxUserSVC                             0x080042fc   Data           4  rtx_lib.o(.constdata)
    irqRtxLib                                0x08004300   Data           1  irq_cm3.o(.constdata)
    osRtxConfig                              0x08004334   Data         104  rtx_lib.o(.rodata)
    Region$$Table$$Base                      0x080043a8   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x080043c8   Number         0  anon$$obj.o(Region$$Table)
    last_score                               0x200014d0   Data           4  main.o(.data)
    curr_score                               0x200014d4   Data           4  main.o(.data)
    start_message                            0x200014d8   Data           4  main.o(.data)
    last_help_message                        0x200014dc   Data           4  main.o(.data)
    curr_help_message                        0x200014e0   Data           4  main.o(.data)
    score_message                            0x200014e4   Data           4  main.o(.data)
    register_1                               0x200014e8   Data           4  led.o(.data)
    register_2                               0x200014ec   Data           4  led.o(.data)
    register_3                               0x200014f0   Data           4  led.o(.data)
    register_4                               0x200014f4   Data           4  led.o(.data)
    register_5                               0x200014f8   Data           4  led.o(.data)
    register_6                               0x200014fc   Data           4  led.o(.data)
    register_7                               0x20001500   Data           4  led.o(.data)
    is_playing                               0x20001504   Data           1  snake.o(.data)
    irqRtxLibRef                             0x20001508   Data           4  rtx_lib.o(.data)
    SystemCoreClock                          0x20001510   Data           4  system_mdr32f9qx.o(.data)
    osRtxInfo                                0x20001518   Data         168  rtx_kernel.o(.data.os)
    snake                                    0x200015c0   Data         444  snake.o(.bss)
    _random_number_data                      0x2000177c   Data         228  rand.o(.bss)
    __libspace_start                         0x20001860   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x200018c0   Data           0  libspace.o(.bss)



==============================================================================

Memory Map of the image

  Image Entry point : 0x080001ed

  Load Region LR_1 (Base: 0x08000000, Size: 0x00005988, Max: 0xffffffff, ABSOLUTE, COMPRESSED[0x00004414])

    Execution Region ER_RO (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x000043c8, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x000000c0   Data   RO          595    RESET               startup_mdr32f9qx.o
    0x080000c0   0x080000c0   0x00000008   Code   RO         1151  * !!!main             c_w.l(__main.o)
    0x080000c8   0x080000c8   0x00000034   Code   RO         1321    !!!scatter          c_w.l(__scatter.o)
    0x080000fc   0x080000fc   0x0000005a   Code   RO         1319    !!dczerorl2         c_w.l(__dczerorl2.o)
    0x08000156   0x08000156   0x00000002   PAD
    0x08000158   0x08000158   0x0000001c   Code   RO         1323    !!handler_zi        c_w.l(__scatter_zi.o)
    0x08000174   0x08000174   0x00000000   Code   RO         1131    .ARM.Collect$$_printf_percent$$00000000  c_w.l(_printf_percent.o)
    0x08000174   0x08000174   0x00000006   Code   RO         1130    .ARM.Collect$$_printf_percent$$00000009  c_w.l(_printf_d.o)
    0x0800017a   0x0800017a   0x00000006   Code   RO         1129    .ARM.Collect$$_printf_percent$$00000014  c_w.l(_printf_s.o)
    0x08000180   0x08000180   0x00000004   Code   RO         1164    .ARM.Collect$$_printf_percent$$00000017  c_w.l(_printf_percent_end.o)
    0x08000184   0x08000184   0x00000002   Code   RO         1242    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x08000186   0x08000186   0x00000000   Code   RO         1166    .ARM.Collect$$libinit$$00000002  c_w.l(libinit2.o)
    0x08000186   0x08000186   0x00000000   Code   RO         1168    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x08000186   0x08000186   0x00000000   Code   RO         1171    .ARM.Collect$$libinit$$0000000A  c_w.l(libinit2.o)
    0x08000186   0x08000186   0x00000000   Code   RO         1173    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x08000186   0x08000186   0x00000004   Code   RO         1174    .ARM.Collect$$libinit$$0000000D  c_w.l(libinit2.o)
    0x0800018a   0x0800018a   0x00000000   Code   RO         1175    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x0800018a   0x0800018a   0x00000000   Code   RO         1178    .ARM.Collect$$libinit$$00000011  c_w.l(libinit2.o)
    0x0800018a   0x0800018a   0x00000000   Code   RO         1180    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x0800018a   0x0800018a   0x00000000   Code   RO         1182    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x0800018a   0x0800018a   0x00000000   Code   RO         1184    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x0800018a   0x0800018a   0x00000000   Code   RO         1186    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x0800018a   0x0800018a   0x00000000   Code   RO         1188    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x0800018a   0x0800018a   0x00000000   Code   RO         1190    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x0800018a   0x0800018a   0x00000000   Code   RO         1192    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x0800018a   0x0800018a   0x00000000   Code   RO         1194    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x0800018a   0x0800018a   0x00000000   Code   RO         1196    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x0800018a   0x0800018a   0x00000000   Code   RO         1198    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x0800018a   0x0800018a   0x00000000   Code   RO         1202    .ARM.Collect$$libinit$$0000002C  c_w.l(libinit2.o)
    0x0800018a   0x0800018a   0x00000000   Code   RO         1204    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x0800018a   0x0800018a   0x00000000   Code   RO         1206    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x0800018a   0x0800018a   0x00000000   Code   RO         1208    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x0800018a   0x0800018a   0x00000002   Code   RO         1209    .ARM.Collect$$libinit$$00000033  c_w.l(libinit2.o)
    0x0800018c   0x0800018c   0x00000002   Code   RO         1280    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO         1286    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO         1288    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO         1291    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO         1294    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO         1296    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO         1299    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x0800018e   0x0800018e   0x00000002   Code   RO         1300    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x08000190   0x08000190   0x00000000   Code   RO         1153    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x08000190   0x08000190   0x00000000   Code   RO         1211    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x08000190   0x08000190   0x00000006   Code   RO         1223    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x08000196   0x08000196   0x00000008   Code   RO         1212    .ARM.Collect$$rtentry$$00000008  c_w.l(__rtentry2.o)
    0x0800019e   0x0800019e   0x00000004   Code   RO         1214    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x080001a2   0x080001a2   0x00000000   Code   RO         1216    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x080001a2   0x080001a2   0x00000008   Code   RO         1217    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x080001aa   0x080001aa   0x00000002   Code   RO         1248    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x080001ac   0x080001ac   0x00000000   Code   RO         1260    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x080001ac   0x080001ac   0x00000004   Code   RO         1261    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x080001b0   0x080001b0   0x00000006   Code   RO         1262    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x080001b6   0x080001b6   0x00000002   PAD
    0x080001b8   0x080001b8   0x00000034   Code   RO         1132    .emb_text           c_w.l(rand.o)
    0x080001ec   0x080001ec   0x00000040   Code   RO          596  * .text               startup_mdr32f9qx.o
    0x0800022c   0x0800022c   0x00000088   Code   RO          900    .text               RTX_CM3.lib(irq_cm3.o)
    0x080002b4   0x080002b4   0x00000034   Code   RO         1101    .text               c_w.l(noretval__2snprintf.o)
    0x080002e8   0x080002e8   0x00000068   Code   RO         1103    .text               c_w.l(__printf.o)
    0x08000350   0x08000350   0x00000052   Code   RO         1105    .text               c_w.l(_printf_str.o)
    0x080003a2   0x080003a2   0x00000002   PAD
    0x080003a4   0x080003a4   0x00000078   Code   RO         1107    .text               c_w.l(_printf_dec.o)
    0x0800041c   0x0800041c   0x0000003c   Code   RO         1133    .text               c_w.l(rand.o)
    0x08000458   0x08000458   0x0000008a   Code   RO         1139    .text               c_w.l(rt_memcpy_v6.o)
    0x080004e2   0x080004e2   0x00000064   Code   RO         1141    .text               c_w.l(rt_memcpy_w.o)
    0x08000546   0x08000546   0x00000010   Code   RO         1143    .text               c_w.l(aeabi_memset4.o)
    0x08000556   0x08000556   0x0000004e   Code   RO         1147    .text               c_w.l(rt_memclr_w.o)
    0x080005a4   0x080005a4   0x00000006   Code   RO         1149    .text               c_w.l(heapauxi.o)
    0x080005aa   0x080005aa   0x000000b2   Code   RO         1154    .text               c_w.l(_printf_intcommon.o)
    0x0800065c   0x0800065c   0x00000030   Code   RO         1156    .text               c_w.l(_printf_char_common.o)
    0x0800068c   0x0800068c   0x0000000a   Code   RO         1158    .text               c_w.l(_sputc.o)
    0x08000696   0x08000696   0x00000010   Code   RO         1160    .text               c_w.l(_snputc.o)
    0x080006a6   0x080006a6   0x0000002c   Code   RO         1162    .text               c_w.l(_printf_char.o)
    0x080006d2   0x080006d2   0x0000004a   Code   RO         1231    .text               c_w.l(sys_stackheap_outer.o)
    0x0800071c   0x0800071c   0x00000012   Code   RO         1233    .text               c_w.l(exit.o)
    0x0800072e   0x0800072e   0x00000002   PAD
    0x08000730   0x08000730   0x00000008   Code   RO         1245    .text               c_w.l(libspace.o)
    0x08000738   0x08000738   0x00000002   Code   RO         1256    .text               c_w.l(use_no_semi.o)
    0x0800073a   0x0800073a   0x00000000   Code   RO         1258    .text               c_w.l(indicate_semi.o)
    0x0800073a   0x0800073a   0x00000002   PAD
    0x0800073c   0x0800073c   0x0000000c   Code   RO         1272    .text               c_w.l(sys_exit.o)
    0x08000748   0x08000748   0x00000024   Code   RO          848    .text.osDelay       RTX_CM3.lib(rtx_delay.o)
    0x0800076c   0x0800076c   0x0000003a   Code   RO          677    .text.osKernelGetState  RTX_CM3.lib(rtx_kernel.o)
    0x080007a6   0x080007a6   0x00000002   PAD
    0x080007a8   0x080007a8   0x0000003c   Code   RO          673    .text.osKernelInitialize  RTX_CM3.lib(rtx_kernel.o)
    0x080007e4   0x080007e4   0x0000003c   Code   RO          679    .text.osKernelStart  RTX_CM3.lib(rtx_kernel.o)
    0x08000820   0x08000820   0x00000084   Code   RO         1071    .text.osMessageQueuePut  RTX_CM3.lib(rtx_msgqueue.o)
    0x080008a4   0x080008a4   0x00000024   Code   RO          881    .text.osMutexAcquire  RTX_CM3.lib(rtx_mutex.o)
    0x080008c8   0x080008c8   0x00000024   Code   RO          887    .text.osMutexDelete  RTX_CM3.lib(rtx_mutex.o)
    0x080008ec   0x080008ec   0x0000003a   Code   RO          877    .text.osMutexNew    RTX_CM3.lib(rtx_mutex.o)
    0x08000926   0x08000926   0x00000002   PAD
    0x08000928   0x08000928   0x00000024   Code   RO          883    .text.osMutexRelease  RTX_CM3.lib(rtx_mutex.o)
    0x0800094c   0x0800094c   0x0000006e   Code   RO          946    .text.osRtxMemoryAlloc  RTX_CM3.lib(rtx_memory.o)
    0x080009ba   0x080009ba   0x00000002   PAD
    0x080009bc   0x080009bc   0x00000058   Code   RO          948    .text.osRtxMemoryFree  RTX_CM3.lib(rtx_memory.o)
    0x08000a14   0x08000a14   0x00000030   Code   RO          944    .text.osRtxMemoryInit  RTX_CM3.lib(rtx_memory.o)
    0x08000a44   0x08000a44   0x0000004c   Code   RO          963    .text.osRtxMemoryPoolAlloc  RTX_CM3.lib(rtx_mempool.o)
    0x08000a90   0x08000a90   0x0000005a   Code   RO          965    .text.osRtxMemoryPoolFree  RTX_CM3.lib(rtx_mempool.o)
    0x08000aea   0x08000aea   0x00000002   PAD
    0x08000aec   0x08000aec   0x00000050   Code   RO          961    .text.osRtxMemoryPoolInit  RTX_CM3.lib(rtx_mempool.o)
    0x08000b3c   0x08000b3c   0x0000004c   Code   RO          863    .text.osRtxMutexOwnerRelease  RTX_CM3.lib(rtx_mutex.o)
    0x08000b88   0x08000b88   0x000000a8   Code   RO         1020    .text.osRtxPendSV_Handler  RTX_CM3.lib(rtx_system.o)
    0x08000c30   0x08000c30   0x00000078   Code   RO         1022    .text.osRtxPostProcess  RTX_CM3.lib(rtx_system.o)
    0x08000ca8   0x08000ca8   0x0000000c   Code   RO         1018    .text.osRtxSysTimerAckIRQ  RTX_CM3.lib(rtx_system.o)
    0x08000cb4   0x08000cb4   0x0000000e   Code   RO         1026    .text.osRtxSysTimerEnable  RTX_CM3.lib(rtx_system.o)
    0x08000cc2   0x08000cc2   0x00000002   PAD
    0x08000cc4   0x08000cc4   0x0000003a   Code   RO         1024    .text.osRtxSysTimerSetup  RTX_CM3.lib(rtx_system.o)
    0x08000cfe   0x08000cfe   0x00000002   PAD
    0x08000d00   0x08000d00   0x00000088   Code   RO          731    .text.osRtxThreadDelayTick  RTX_CM3.lib(rtx_thread.o)
    0x08000d88   0x08000d88   0x00000158   Code   RO          741    .text.osRtxThreadDispatch  RTX_CM3.lib(rtx_thread.o)
    0x08000ee0   0x08000ee0   0x0000001a   Code   RO          715    .text.osRtxThreadListGet  RTX_CM3.lib(rtx_thread.o)
    0x08000efa   0x08000efa   0x00000002   PAD
    0x08000efc   0x08000efc   0x00000038   Code   RO          713    .text.osRtxThreadListPut  RTX_CM3.lib(rtx_thread.o)
    0x08000f34   0x08000f34   0x0000001a   Code   RO          721    .text.osRtxThreadListRemove  RTX_CM3.lib(rtx_thread.o)
    0x08000f4e   0x08000f4e   0x00000002   PAD
    0x08000f50   0x08000f50   0x00000060   Code   RO          719    .text.osRtxThreadListSort  RTX_CM3.lib(rtx_thread.o)
    0x08000fb0   0x08000fb0   0x00000128   Code   RO          747    .text.osRtxThreadPostProcess  RTX_CM3.lib(rtx_thread.o)
    0x080010d8   0x080010d8   0x00000048   Code   RO          725    .text.osRtxThreadReadyPut  RTX_CM3.lib(rtx_thread.o)
    0x08001120   0x08001120   0x00000006   Code   RO          733    .text.osRtxThreadRegPtr  RTX_CM3.lib(rtx_thread.o)
    0x08001126   0x08001126   0x00000002   PAD
    0x08001128   0x08001128   0x0000002e   Code   RO          739    .text.osRtxThreadStackCheck  RTX_CM3.lib(rtx_thread.o)
    0x08001156   0x08001156   0x00000002   PAD
    0x08001158   0x08001158   0x00000012   Code   RO          737    .text.osRtxThreadSwitch  RTX_CM3.lib(rtx_thread.o)
    0x0800116a   0x0800116a   0x00000002   PAD
    0x0800116c   0x0800116c   0x000000e2   Code   RO          745    .text.osRtxThreadWaitEnter  RTX_CM3.lib(rtx_thread.o)
    0x0800124e   0x0800124e   0x00000002   PAD
    0x08001250   0x08001250   0x000000be   Code   RO          743    .text.osRtxThreadWaitExit  RTX_CM3.lib(rtx_thread.o)
    0x0800130e   0x0800130e   0x00000002   PAD
    0x08001310   0x08001310   0x00000078   Code   RO         1016    .text.osRtxTick_Handler  RTX_CM3.lib(rtx_system.o)
    0x08001388   0x08001388   0x000000aa   Code   RO          905    .text.osRtxTimerTick  RTX_CM3.lib(rtx_timer.o)
    0x08001432   0x08001432   0x00000002   PAD
    0x08001434   0x08001434   0x0000000e   Code   RO          751    .text.osThreadExit  RTX_CM3.lib(rtx_thread.o)
    0x08001442   0x08001442   0x00000002   PAD
    0x08001444   0x08001444   0x0000003a   Code   RO          793    .text.osThreadNew   RTX_CM3.lib(rtx_thread.o)
    0x0800147e   0x0800147e   0x00000002   PAD
    0x08001480   0x08001480   0x00000014   Code   RO          844    .text.svcRtxDelay   RTX_CM3.lib(rtx_delay.o)
    0x08001494   0x08001494   0x0000000c   Code   RO          651    .text.svcRtxKernelGetState  RTX_CM3.lib(rtx_kernel.o)
    0x080014a0   0x080014a0   0x000001ac   Code   RO          647    .text.svcRtxKernelInitialize  RTX_CM3.lib(rtx_kernel.o)
    0x0800164c   0x0800164c   0x00000096   Code   RO          653    .text.svcRtxKernelStart  RTX_CM3.lib(rtx_kernel.o)
    0x080016e2   0x080016e2   0x00000002   PAD
    0x080016e4   0x080016e4   0x00000118   Code   RO         1051    .text.svcRtxMessageQueuePut  RTX_CM3.lib(rtx_msgqueue.o)
    0x080017fc   0x080017fc   0x0000009e   Code   RO          869    .text.svcRtxMutexAcquire  RTX_CM3.lib(rtx_mutex.o)
    0x0800189a   0x0800189a   0x00000002   PAD
    0x0800189c   0x0800189c   0x000000d6   Code   RO          875    .text.svcRtxMutexDelete  RTX_CM3.lib(rtx_mutex.o)
    0x08001972   0x08001972   0x00000002   PAD
    0x08001974   0x08001974   0x00000072   Code   RO          865    .text.svcRtxMutexNew  RTX_CM3.lib(rtx_mutex.o)
    0x080019e6   0x080019e6   0x00000002   PAD
    0x080019e8   0x080019e8   0x000000c8   Code   RO          871    .text.svcRtxMutexRelease  RTX_CM3.lib(rtx_mutex.o)
    0x08001ab0   0x08001ab0   0x00000142   Code   RO          777    .text.svcRtxThreadExit  RTX_CM3.lib(rtx_thread.o)
    0x08001bf2   0x08001bf2   0x00000002   PAD
    0x08001bf4   0x08001bf4   0x00000240   Code   RO          749    .text.svcRtxThreadNew  RTX_CM3.lib(rtx_thread.o)
    0x08001e34   0x08001e34   0x00000218   Code   RO          101    i.BTN_Init          btn.o
    0x0800204c   0x0800204c   0x0000003a   Code   RO          161    i.LCD_ClearPage     lcd.o
    0x08002086   0x08002086   0x00000028   Code   RO          162    i.LCD_ClearScreen   lcd.o
    0x080020ae   0x080020ae   0x00000016   Code   RO          163    i.LCD_ClearString   lcd.o
    0x080020c4   0x080020c4   0x00000040   Code   RO          164    i.LCD_DataBusDirection  lcd.o
    0x08002104   0x08002104   0x000000a0   Code   RO          166    i.LCD_Enable        lcd.o
    0x080021a4   0x080021a4   0x000000c8   Code   RO          167    i.LCD_Init          lcd.o
    0x0800226c   0x0800226c   0x00000140   Code   RO          168    i.LCD_PortCfg       lcd.o
    0x080023ac   0x080023ac   0x000000fa   Code   RO          169    i.LCD_PutImage      lcd.o
    0x080024a6   0x080024a6   0x0000003a   Code   RO          170    i.LCD_PutString     lcd.o
    0x080024e0   0x080024e0   0x000000ec   Code   RO          171    i.LCD_PutSymbol     lcd.o
    0x080025cc   0x080025cc   0x000000bc   Code   RO          173    i.LCD_ReadStatus    lcd.o
    0x08002688   0x08002688   0x00000070   Code   RO          174    i.LCD_Reset         lcd.o
    0x080026f8   0x080026f8   0x000000a4   Code   RO          176    i.LCD_SetAddress    lcd.o
    0x0800279c   0x0800279c   0x00000044   Code   RO          177    i.LCD_SetDataBits   lcd.o
    0x080027e0   0x080027e0   0x000000a4   Code   RO          178    i.LCD_SetPage       lcd.o
    0x08002884   0x08002884   0x000000a0   Code   RO          179    i.LCD_WriteData     lcd.o
    0x08002924   0x08002924   0x000000c4   Code   RO          453    i.RTOS_Init         rtos.o
    0x080029e8   0x080029e8   0x00000090   Code   RO          603    i.SystemCoreClockUpdate  system_mdr32f9qx.o
    0x08002a78   0x08002a78   0x00000040   Code   RO          604    i.SystemInit        system_mdr32f9qx.o
    0x08002ab8   0x08002ab8   0x00000058   Code   RO          102    i.Thread_DownButtonCheck  btn.o
    0x08002b10   0x08002b10   0x00000058   Code   RO          103    i.Thread_LeftButtonCheck  btn.o
    0x08002b68   0x08002b68   0x00000058   Code   RO          104    i.Thread_RightButtonCheck  btn.o
    0x08002bc0   0x08002bc0   0x0000006c   Code   RO          105    i.Thread_SelectButtonCheck  btn.o
    0x08002c2c   0x08002c2c   0x00000058   Code   RO          106    i.Thread_UpButtonCheck  btn.o
    0x08002c84   0x08002c84   0x00000016   Code   RO          490    i._mutex_acquire    rtx_lib.o
    0x08002c9a   0x08002c9a   0x0000000c   Code   RO          491    i._mutex_free       rtx_lib.o
    0x08002ca6   0x08002ca6   0x00000020   Code   RO          492    i._mutex_initialize  rtx_lib.o
    0x08002cc6   0x08002cc6   0x00000012   Code   RO          493    i._mutex_release    rtx_lib.o
    0x08002cd8   0x08002cd8   0x00000008   Code   RO          494    i._platform_post_stackheap_init  rtx_lib.o
    0x08002ce0   0x08002ce0   0x00000044   Code   RO          302    i.all_off           led.o
    0x08002d24   0x08002d24   0x00000010   Code   RO          366    i.delay             snake.o
    0x08002d34   0x08002d34   0x0000000e   Code   RO          367    i.draw_food         snake.o
    0x08002d42   0x08002d42   0x00000034   Code   RO          368    i.draw_snake        snake.o
    0x08002d76   0x08002d76   0x00000084   Code   RO          369    i.generate_food     snake.o
    0x08002dfa   0x08002dfa   0x0000001a   Code   RO          370    i.init_snake        snake.o
    0x08002e14   0x08002e14   0x00000060   Code   RO            4    i.main              main.o
    0x08002e74   0x08002e74   0x000001d0   Code   RO          371    i.move_snake        snake.o
    0x08003044   0x08003044   0x00000020   Code   RO          566    i.osRtxErrorNotify  rtx_config.o
    0x08003064   0x08003064   0x00000004   Code   RO          567    i.osRtxIdleThread   rtx_config.o
    0x08003068   0x08003068   0x00000024   Code   RO          495    i.os_kernel_is_active  rtx_lib.o
    0x0800308c   0x0800308c   0x000000b8   Code   RO          372    i.play_snake        snake.o
    0x08003144   0x08003144   0x00000144   Code   RO          303    i.ports_init        led.o
    0x08003288   0x08003288   0x00000024   Code   RO          304    i.select_led        led.o
    0x080032ac   0x080032ac   0x000000e2   Code   RO          373    i.set_direction     snake.o
    0x0800338e   0x0800338e   0x00000002   PAD
    0x08003390   0x08003390   0x000000a0   Code   RO          305    i.set_registers     led.o
    0x08003430   0x08003430   0x00000088   Code   RO          306    i.shiftOut          led.o
    0x080034b8   0x080034b8   0x000000b8   Code   RO          308    i.switch_on         led.o
    0x08003570   0x08003570   0x0000063c   Data   RO          180    .constdata          lcd.o
    0x08003bac   0x08003bac   0x000006f0   Data   RO          454    .constdata          rtos.o
    0x0800429c   0x0800429c   0x00000064   Data   RO          501    .constdata          rtx_lib.o
    0x08004300   0x08004300   0x00000001   Data   RO          899    .constdata          RTX_CM3.lib(irq_cm3.o)
    0x08004301   0x08004301   0x00000003   PAD
    0x08004304   0x08004304   0x0000002f   Data   RO            6    .conststring        main.o
    0x08004333   0x08004333   0x00000001   PAD
    0x08004334   0x08004334   0x00000068   Data   RO          503    .rodata             rtx_lib.o
    0x0800439c   0x0800439c   0x0000000b   Data   RO          699    .rodata.str1.4      RTX_CM3.lib(rtx_kernel.o)
    0x080043a7   0x080043a7   0x00000001   PAD
    0x080043a8   0x080043a8   0x00000020   Data   RO         1317    Region$$Table       anon$$obj.o


    Execution Region ER_RW (Exec base: 0x20000000, Load base: 0x080043c8, Size: 0x000015c0, Max: 0xffffffff, ABSOLUTE, COMPRESSED[0x0000004c])

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   COMPRESSED   0x00001230   Data   RW          496    .bss.os             rtx_lib.o
    0x20001230   COMPRESSED   0x00000034   Data   RW          497    .bss.os.msgqueue.cb  rtx_lib.o
    0x20001264   COMPRESSED   0x00000050   Data   RW          498    .bss.os.msgqueue.mem  rtx_lib.o
    0x200012b4   COMPRESSED   0x00000088   Data   RW          499    .bss.os.thread.cb   rtx_lib.o
    0x2000133c   COMPRESSED   0x00000004   PAD
    0x20001340   COMPRESSED   0x00000190   Data   RW          500    .bss.os.thread.stack  rtx_lib.o
    0x200014d0   COMPRESSED   0x00000018   Data   RW            7    .data               main.o
    0x200014e8   COMPRESSED   0x0000001c   Data   RW          310    .data               led.o
    0x20001504   COMPRESSED   0x00000001   Data   RW          376    .data               snake.o
    0x20001505   COMPRESSED   0x00000003   PAD
    0x20001508   COMPRESSED   0x00000005   Data   RW          502    .data               rtx_lib.o
    0x2000150d   COMPRESSED   0x00000003   PAD
    0x20001510   COMPRESSED   0x00000004   Data   RW          605    .data               system_mdr32f9qx.o
    0x20001514   COMPRESSED   0x00000004   PAD
    0x20001518   COMPRESSED   0x000000a8   Data   RW          700    .data.os            RTX_CM3.lib(rtx_kernel.o)


    Execution Region ER_ZI (Exec base: 0x200015c0, Load base: 0x08004414, Size: 0x00000900, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x200015c0        -       0x000001bc   Zero   RW          374    .bss                snake.o
    0x2000177c        -       0x000000e4   Zero   RW         1134    .bss                c_w.l(rand.o)
    0x20001860        -       0x00000060   Zero   RW         1246    .bss                c_w.l(libspace.o)
    0x200018c0        -       0x00000200   Zero   RW          594    HEAP                startup_mdr32f9qx.o
    0x20001ac0        -       0x00000400   Zero   RW          593    STACK               startup_mdr32f9qx.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       996         78          0          0          0       3005   btn.o
      2264        180       1596          0          0       9838   lcd.o
       908        114          0         28          0       3450   led.o
        96         24         47         24          0       9363   main.o
       196         40       1776          0          0        644   rtos.o
        36          6          0          0          0        941   rtx_config.o
       128          4        204       5329          0      11336   rtx_lib.o
      1114         88          0          1        444       5679   snake.o
        64         26        192          0       1536        792   startup_mdr32f9qx.o
       208         24          0          4          0       1335   system_mdr32f9qx.o

    ----------------------------------------------------------------------
      6012        584       3848       5400       1980      46383   Object Totals
         0          0         32          0          0          0   (incl. Generated)
         2          0          1         14          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

       136         10          1          0          0        480   irq_cm3.o
        56          0          0          0          0       2892   rtx_delay.o
       768          0         11        168          0      17856   rtx_kernel.o
       246          0          0          0          0       1937   rtx_memory.o
       246          0          0          0          0      17021   rtx_mempool.o
       412          0          0          0          0      18585   rtx_msgqueue.o
       928          0          0          0          0       8779   rtx_mutex.o
       492          8          0          0          0       8155   rtx_system.o
      2508          0          0          0          0      40733   rtx_thread.o
       170          0          0          0          0       8770   rtx_timer.o
        90          0          0          0          0          0   __dczerorl2.o
         8          0          0          0          0         68   __main.o
       104          0          0          0          0         84   __printf.o
         0          0          0          0          0          0   __rtentry.o
        20          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        52          8          0          0          0          0   __scatter.o
        28          0          0          0          0          0   __scatter_zi.o
        44          0          0          0          0        108   _printf_char.o
        48          6          0          0          0         96   _printf_char_common.o
         6          0          0          0          0          0   _printf_d.o
       120         16          0          0          0         92   _printf_dec.o
       178          0          0          0          0         88   _printf_intcommon.o
         0          0          0          0          0          0   _printf_percent.o
         4          0          0          0          0          0   _printf_percent_end.o
         6          0          0          0          0          0   _printf_s.o
        82          0          0          0          0         80   _printf_str.o
        16          0          0          0          0         68   _snputc.o
        10          0          0          0          0         68   _sputc.o
        16          0          0          0          0         68   aeabi_memset4.o
        18          0          0          0          0         80   exit.o
         6          0          0          0          0        152   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
         2          0          0          0          0          0   libinit.o
         6          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
        52          4          0          0          0         84   noretval__2snprintf.o
       112         18          0          0        228        160   rand.o
        78          0          0          0          0         80   rt_memclr_w.o
       138          0          0          0          0         68   rt_memcpy_v6.o
       100          0          0          0          0         80   rt_memcpy_w.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        12          4          0          0          0         68   sys_exit.o
        74          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o

    ----------------------------------------------------------------------
      7476         78         16        168        324     127016   Library Totals
        52          0          4          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      5962         18         12        168          0     125208   RTX_CM3.lib
      1462         60          0          0        324       1808   c_w.l

    ----------------------------------------------------------------------
      7476         78         16        168        324     127016   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     13488        662       3864       5568       2304     169939   Grand Totals
     13488        662       3864         76       2304     169939   ELF Image Totals (compressed)
     13488        662       3864         76          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                17352 (  16.95kB)
    Total RW  Size (RW Data + ZI Data)              7872 (   7.69kB)
    Total ROM Size (Code + RO Data + RW Data)      17428 (  17.02kB)

==============================================================================

